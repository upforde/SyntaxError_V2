#pragma checksum "D:\Skole\Bachelor\DotNET\SyntaxError_V2\SyntaxError.V2\SyntaxError.V2.App\Views\CreateChallengesPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "0F2CE19A72397F39FBBFA6256EF6EBA1"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SyntaxError.V2.App.Views
{
    partial class CreateChallengesPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Source = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj13_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.ChallengeObjects.Game dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj13;
            private global::Windows.UI.Xaml.Controls.TextBlock obj14;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj14TextDisabled = false;

            public CreateChallengesPage_obj13_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 1525 && columnNumber == 68)
                {
                    isobj14TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 13: // Views\CreateChallengesPage.xaml line 1524
                        this.obj13 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 14: // Views\CreateChallengesPage.xaml line 1525
                        this.obj14 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj13.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.ChallengeObjects.Game) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.ChallengeObjects.Game)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1525
                    if (!isobj14TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj14, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj18_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.SologameChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj18;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj19;
            private global::Windows.UI.Xaml.Controls.TextBlock obj20;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj19SourceDisabled = false;
            private static bool isobj20TextDisabled = false;

            public CreateChallengesPage_obj18_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 1407 && columnNumber == 59)
                {
                    isobj19SourceDisabled = true;
                }
                else if (lineNumber == 1413 && columnNumber == 49)
                {
                    isobj20TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 18: // Views\CreateChallengesPage.xaml line 1400
                        this.obj18 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 19: // Views\CreateChallengesPage.xaml line 1405
                        this.obj19 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 20: // Views\CreateChallengesPage.xaml line 1409
                        this.obj20 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj18.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.SologameChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.SologameChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.SologameChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game(obj.Game, phase);
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                    }
                }
            }
            private void Update_Game(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game_URI(obj.URI, phase);
                    }
                }
            }
            private void Update_Game_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1405
                    if (!isobj19SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj19, obj, null);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1409
                    if (!isobj20TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj20, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj32_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.ChallengeObjects.Image dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj32;
            private global::Windows.UI.Xaml.Controls.TextBlock obj33;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj33TextDisabled = false;

            public CreateChallengesPage_obj32_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 1317 && columnNumber == 68)
                {
                    isobj33TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 32: // Views\CreateChallengesPage.xaml line 1316
                        this.obj32 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 33: // Views\CreateChallengesPage.xaml line 1317
                        this.obj33 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj32.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.ChallengeObjects.Image) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.ChallengeObjects.Image)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.ChallengeObjects.Image obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1317
                    if (!isobj33TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj33, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj37_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj37;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj38;
            private global::Windows.UI.Xaml.Controls.TextBlock obj39;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj38SourceDisabled = false;
            private static bool isobj39TextDisabled = false;

            public CreateChallengesPage_obj37_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 1203 && columnNumber == 59)
                {
                    isobj38SourceDisabled = true;
                }
                else if (lineNumber == 1208 && columnNumber == 45)
                {
                    isobj39TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 37: // Views\CreateChallengesPage.xaml line 1196
                        this.obj37 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 38: // Views\CreateChallengesPage.xaml line 1201
                        this.obj38 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 39: // Views\CreateChallengesPage.xaml line 1204
                        this.obj39 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj37.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Image(obj.Image, phase);
                    }
                }
            }
            private void Update_Image(global::SyntaxError.V2.Modell.ChallengeObjects.Image obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Image_URI(obj.URI, phase);
                        this.Update_Image_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Image_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1201
                    if (!isobj38SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj38, obj, null);
                    }
                }
            }
            private void Update_Image_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1204
                    if (!isobj39TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj39, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj51_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.ChallengeObjects.Image dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj51;
            private global::Windows.UI.Xaml.Controls.TextBlock obj52;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj52TextDisabled = false;

            public CreateChallengesPage_obj51_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 1113 && columnNumber == 68)
                {
                    isobj52TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 51: // Views\CreateChallengesPage.xaml line 1112
                        this.obj51 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 52: // Views\CreateChallengesPage.xaml line 1113
                        this.obj52 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj51.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.ChallengeObjects.Image) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.ChallengeObjects.Image)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.ChallengeObjects.Image obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1113
                    if (!isobj52TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj52, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj56_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj56;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj57;
            private global::Windows.UI.Xaml.Controls.TextBlock obj58;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj57SourceDisabled = false;
            private static bool isobj58TextDisabled = false;

            public CreateChallengesPage_obj56_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 999 && columnNumber == 59)
                {
                    isobj57SourceDisabled = true;
                }
                else if (lineNumber == 1004 && columnNumber == 45)
                {
                    isobj58TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 56: // Views\CreateChallengesPage.xaml line 992
                        this.obj56 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 57: // Views\CreateChallengesPage.xaml line 997
                        this.obj57 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 58: // Views\CreateChallengesPage.xaml line 1000
                        this.obj58 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj56.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Image(obj.Image, phase);
                    }
                }
            }
            private void Update_Image(global::SyntaxError.V2.Modell.ChallengeObjects.Image obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Image_URI(obj.URI, phase);
                        this.Update_Image_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Image_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 997
                    if (!isobj57SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj57, obj, null);
                    }
                }
            }
            private void Update_Image_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1000
                    if (!isobj58TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj58, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj70_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.QuizChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj70;
            private global::Windows.UI.Xaml.Controls.TextBlock obj71;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj71TextDisabled = false;

            public CreateChallengesPage_obj70_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 859 && columnNumber == 61)
                {
                    isobj71TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 70: // Views\CreateChallengesPage.xaml line 858
                        this.obj70 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 71: // Views\CreateChallengesPage.xaml line 859
                        this.obj71 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj70.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.QuizChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.QuizChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.QuizChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 859
                    if (!isobj71TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj71, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj83_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.ChallengeObjects.Music dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj83;
            private global::Windows.UI.Xaml.Controls.TextBlock obj84;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj84TextDisabled = false;

            public CreateChallengesPage_obj83_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 777 && columnNumber == 68)
                {
                    isobj84TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 83: // Views\CreateChallengesPage.xaml line 776
                        this.obj83 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 84: // Views\CreateChallengesPage.xaml line 777
                        this.obj84 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj83.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.ChallengeObjects.Music) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.ChallengeObjects.Music)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.ChallengeObjects.Music obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 777
                    if (!isobj84TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj84, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj88_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.MusicChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj88;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj89;
            private global::Windows.UI.Xaml.Controls.TextBlock obj90;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj89SourceDisabled = false;
            private static bool isobj90TextDisabled = false;

            public CreateChallengesPage_obj88_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 663 && columnNumber == 59)
                {
                    isobj89SourceDisabled = true;
                }
                else if (lineNumber == 668 && columnNumber == 45)
                {
                    isobj90TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 88: // Views\CreateChallengesPage.xaml line 656
                        this.obj88 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 89: // Views\CreateChallengesPage.xaml line 661
                        this.obj89 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 90: // Views\CreateChallengesPage.xaml line 664
                        this.obj90 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj88.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.MusicChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.MusicChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.MusicChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Song(obj.Song, phase);
                    }
                }
            }
            private void Update_Song(global::SyntaxError.V2.Modell.ChallengeObjects.Music obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Song_URI(obj.URI, phase);
                        this.Update_Song_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Song_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 661
                    if (!isobj89SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj89, obj, null);
                    }
                }
            }
            private void Update_Song_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 664
                    if (!isobj90TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj90, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj105_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj105;
            private global::Windows.UI.Xaml.Controls.TextBlock obj106;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj106TextDisabled = false;

            public CreateChallengesPage_obj105_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 490 && columnNumber == 61)
                {
                    isobj106TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 105: // Views\CreateChallengesPage.xaml line 484
                        this.obj105 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 106: // Views\CreateChallengesPage.xaml line 490
                        this.obj106 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj105.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 490
                    if (!isobj106TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj106, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj118_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.ChallengeObjects.Game dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj118;
            private global::Windows.UI.Xaml.Controls.TextBlock obj119;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj119TextDisabled = false;

            public CreateChallengesPage_obj118_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 403 && columnNumber == 68)
                {
                    isobj119TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 118: // Views\CreateChallengesPage.xaml line 402
                        this.obj118 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 119: // Views\CreateChallengesPage.xaml line 403
                        this.obj119 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj118.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.ChallengeObjects.Game) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.ChallengeObjects.Game)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 403
                    if (!isobj119TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj119, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj123_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.CrewChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj123;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj124;
            private global::Windows.UI.Xaml.Controls.TextBlock obj125;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj124SourceDisabled = false;
            private static bool isobj125TextDisabled = false;

            public CreateChallengesPage_obj123_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 287 && columnNumber == 59)
                {
                    isobj124SourceDisabled = true;
                }
                else if (lineNumber == 293 && columnNumber == 49)
                {
                    isobj125TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 123: // Views\CreateChallengesPage.xaml line 280
                        this.obj123 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 124: // Views\CreateChallengesPage.xaml line 285
                        this.obj124 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 125: // Views\CreateChallengesPage.xaml line 289
                        this.obj125 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj123.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.CrewChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.CrewChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.CrewChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game(obj.Game, phase);
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                    }
                }
            }
            private void Update_Game(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game_URI(obj.URI, phase);
                    }
                }
            }
            private void Update_Game_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 285
                    if (!isobj124SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj124, obj, null);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 289
                    if (!isobj125TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj125, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj137_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.ChallengeObjects.Game dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj137;
            private global::Windows.UI.Xaml.Controls.TextBlock obj138;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj138TextDisabled = false;

            public CreateChallengesPage_obj137_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 197 && columnNumber == 68)
                {
                    isobj138TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 137: // Views\CreateChallengesPage.xaml line 196
                        this.obj137 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 138: // Views\CreateChallengesPage.xaml line 197
                        this.obj138 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj137.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.ChallengeObjects.Game) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.ChallengeObjects.Game)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 197
                    if (!isobj138TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj138, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj142_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.AudienceChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj142;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj143;
            private global::Windows.UI.Xaml.Controls.TextBlock obj144;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj143SourceDisabled = false;
            private static bool isobj144TextDisabled = false;

            public CreateChallengesPage_obj142_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 80 && columnNumber == 59)
                {
                    isobj143SourceDisabled = true;
                }
                else if (lineNumber == 86 && columnNumber == 49)
                {
                    isobj144TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 142: // Views\CreateChallengesPage.xaml line 73
                        this.obj142 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 143: // Views\CreateChallengesPage.xaml line 78
                        this.obj143 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 144: // Views\CreateChallengesPage.xaml line 82
                        this.obj144 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj142.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.AudienceChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.AudienceChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.AudienceChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game(obj.Game, phase);
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                    }
                }
            }
            private void Update_Game(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game_URI(obj.URI, phase);
                    }
                }
            }
            private void Update_Game_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 78
                    if (!isobj143SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj143, obj, null);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 82
                    if (!isobj144TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj144, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.App.Views.CreateChallengesPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj6;
            private global::Windows.UI.Xaml.Controls.ComboBox obj11;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj25;
            private global::Windows.UI.Xaml.Controls.ComboBox obj30;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj44;
            private global::Windows.UI.Xaml.Controls.ComboBox obj49;
            private global::Windows.UI.Xaml.Controls.ListView obj63;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj76;
            private global::Windows.UI.Xaml.Controls.ComboBox obj81;
            private global::Windows.UI.Xaml.Controls.ListView obj95;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj111;
            private global::Windows.UI.Xaml.Controls.ComboBox obj116;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj130;
            private global::Windows.UI.Xaml.Controls.ComboBox obj135;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj6ItemsSourceDisabled = false;
            private static bool isobj11ItemsSourceDisabled = false;
            private static bool isobj25ItemsSourceDisabled = false;
            private static bool isobj30ItemsSourceDisabled = false;
            private static bool isobj44ItemsSourceDisabled = false;
            private static bool isobj49ItemsSourceDisabled = false;
            private static bool isobj63ItemsSourceDisabled = false;
            private static bool isobj76ItemsSourceDisabled = false;
            private static bool isobj81ItemsSourceDisabled = false;
            private static bool isobj95ItemsSourceDisabled = false;
            private static bool isobj111ItemsSourceDisabled = false;
            private static bool isobj116ItemsSourceDisabled = false;
            private static bool isobj130ItemsSourceDisabled = false;
            private static bool isobj135ItemsSourceDisabled = false;

            public CreateChallengesPage_obj1_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 1389 && columnNumber == 48)
                {
                    isobj6ItemsSourceDisabled = true;
                }
                else if (lineNumber == 1519 && columnNumber == 80)
                {
                    isobj11ItemsSourceDisabled = true;
                }
                else if (lineNumber == 1185 && columnNumber == 48)
                {
                    isobj25ItemsSourceDisabled = true;
                }
                else if (lineNumber == 1311 && columnNumber == 80)
                {
                    isobj30ItemsSourceDisabled = true;
                }
                else if (lineNumber == 981 && columnNumber == 48)
                {
                    isobj44ItemsSourceDisabled = true;
                }
                else if (lineNumber == 1107 && columnNumber == 80)
                {
                    isobj49ItemsSourceDisabled = true;
                }
                else if (lineNumber == 849 && columnNumber == 31)
                {
                    isobj63ItemsSourceDisabled = true;
                }
                else if (lineNumber == 645 && columnNumber == 48)
                {
                    isobj76ItemsSourceDisabled = true;
                }
                else if (lineNumber == 771 && columnNumber == 80)
                {
                    isobj81ItemsSourceDisabled = true;
                }
                else if (lineNumber == 475 && columnNumber == 31)
                {
                    isobj95ItemsSourceDisabled = true;
                }
                else if (lineNumber == 269 && columnNumber == 48)
                {
                    isobj111ItemsSourceDisabled = true;
                }
                else if (lineNumber == 397 && columnNumber == 80)
                {
                    isobj116ItemsSourceDisabled = true;
                }
                else if (lineNumber == 62 && columnNumber == 48)
                {
                    isobj130ItemsSourceDisabled = true;
                }
                else if (lineNumber == 191 && columnNumber == 80)
                {
                    isobj135ItemsSourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 6: // Views\CreateChallengesPage.xaml line 1389
                        this.obj6 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 11: // Views\CreateChallengesPage.xaml line 1519
                        this.obj11 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    case 25: // Views\CreateChallengesPage.xaml line 1185
                        this.obj25 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 30: // Views\CreateChallengesPage.xaml line 1311
                        this.obj30 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    case 44: // Views\CreateChallengesPage.xaml line 981
                        this.obj44 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 49: // Views\CreateChallengesPage.xaml line 1107
                        this.obj49 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    case 63: // Views\CreateChallengesPage.xaml line 849
                        this.obj63 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 76: // Views\CreateChallengesPage.xaml line 645
                        this.obj76 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 81: // Views\CreateChallengesPage.xaml line 771
                        this.obj81 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    case 95: // Views\CreateChallengesPage.xaml line 475
                        this.obj95 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 111: // Views\CreateChallengesPage.xaml line 269
                        this.obj111 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 116: // Views\CreateChallengesPage.xaml line 397
                        this.obj116 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    case 130: // Views\CreateChallengesPage.xaml line 62
                        this.obj130 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 135: // Views\CreateChallengesPage.xaml line 191
                        this.obj135 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.App.Views.CreateChallengesPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.App.Views.CreateChallengesPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::SyntaxError.V2.App.ViewModels.CreateChallengesViewModel obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_FilteredSolo(obj.FilteredSolo, phase);
                        this.Update_ViewModel_Games(obj.Games, phase);
                        this.Update_ViewModel_FilteredSilhu(obj.FilteredSilhu, phase);
                        this.Update_ViewModel_Images(obj.Images, phase);
                        this.Update_ViewModel_FilteredScreen(obj.FilteredScreen, phase);
                        this.Update_ViewModel_FilteredQuiz(obj.FilteredQuiz, phase);
                        this.Update_ViewModel_FilteredMusic(obj.FilteredMusic, phase);
                        this.Update_ViewModel_Music(obj.Music, phase);
                        this.Update_ViewModel_FilteredMulti(obj.FilteredMulti, phase);
                        this.Update_ViewModel_FilteredCrew(obj.FilteredCrew, phase);
                        this.Update_ViewModel_FilteredAudience(obj.FilteredAudience, phase);
                    }
                }
            }
            private void Update_ViewModel_FilteredSolo(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.SologameChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1389
                    if (!isobj6ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj6, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Games(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.ChallengeObjects.Game> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1519
                    if (!isobj11ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj11, obj, null);
                    }
                    // Views\CreateChallengesPage.xaml line 397
                    if (!isobj116ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj116, obj, null);
                    }
                    // Views\CreateChallengesPage.xaml line 191
                    if (!isobj135ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj135, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredSilhu(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1185
                    if (!isobj25ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj25, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Images(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.ChallengeObjects.Image> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1311
                    if (!isobj30ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj30, obj, null);
                    }
                    // Views\CreateChallengesPage.xaml line 1107
                    if (!isobj49ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj49, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredScreen(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 981
                    if (!isobj44ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj44, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredQuiz(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.QuizChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 849
                    if (!isobj63ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj63, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredMusic(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.MusicChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 645
                    if (!isobj76ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj76, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Music(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.ChallengeObjects.Music> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 771
                    if (!isobj81ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj81, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredMulti(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 475
                    if (!isobj95ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj95, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredCrew(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.CrewChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 269
                    if (!isobj111ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj111, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredAudience(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.AudienceChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 62
                    if (!isobj130ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj130, obj, null);
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\CreateChallengesPage.xaml line 14
                {
                    this.ContentArea = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 3: // Views\CreateChallengesPage.xaml line 17
                {
                    this.ChallengeList = (global::Windows.UI.Xaml.Controls.Pivot)(target);
                    ((global::Windows.UI.Xaml.Controls.Pivot)this.ChallengeList).SelectionChanged += this.ChallengeList_SelectionChanged;
                }
                break;
            case 4: // Views\CreateChallengesPage.xaml line 1560
                {
                    this.RefreshChallengePage = (global::Windows.UI.Xaml.Controls.StackPanel)(target);
                }
                break;
            case 5: // Views\CreateChallengesPage.xaml line 1582
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element5 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element5).Click += this.RefreshChallengePage_Click;
                }
                break;
            case 6: // Views\CreateChallengesPage.xaml line 1389
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element6 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element6).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 7: // Views\CreateChallengesPage.xaml line 1548
                {
                    this.EmptySologameChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 8: // Views\CreateChallengesPage.xaml line 1539
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element8 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element8).Click += this.SaveButton_Click;
                }
                break;
            case 9: // Views\CreateChallengesPage.xaml line 1542
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element9 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element9).Click += this.BackButton_Click;
                }
                break;
            case 10: // Views\CreateChallengesPage.xaml line 1448
                {
                    global::Windows.UI.Xaml.Controls.Button element10 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element10).Click += this.BackButton_Click;
                }
                break;
            case 11: // Views\CreateChallengesPage.xaml line 1519
                {
                    global::Windows.UI.Xaml.Controls.ComboBox element11 = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)element11).SelectionChanged += this.ComboBox_SelectionChanged;
                }
                break;
            case 15: // Views\CreateChallengesPage.xaml line 1486
                {
                    global::Windows.UI.Xaml.Controls.Grid element15 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element15).Tapped += this.StackPanel_Tapped;
                }
                break;
            case 16: // Views\CreateChallengesPage.xaml line 1503
                {
                    global::Windows.UI.Xaml.Controls.Button element16 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element16).Click += this.BackButton_Click;
                }
                break;
            case 21: // Views\CreateChallengesPage.xaml line 1383
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element21 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element21).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 22: // Views\CreateChallengesPage.xaml line 1364
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element22 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element22).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element22).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 23: // Views\CreateChallengesPage.xaml line 1371
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element23 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element23).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 24: // Views\CreateChallengesPage.xaml line 1378
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element24 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element24).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 25: // Views\CreateChallengesPage.xaml line 1185
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element25 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element25).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 26: // Views\CreateChallengesPage.xaml line 1340
                {
                    this.EmptySilhouetteChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 27: // Views\CreateChallengesPage.xaml line 1331
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element27 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element27).Click += this.SaveButton_Click;
                }
                break;
            case 28: // Views\CreateChallengesPage.xaml line 1334
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element28 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element28).Click += this.BackButton_Click;
                }
                break;
            case 29: // Views\CreateChallengesPage.xaml line 1241
                {
                    global::Windows.UI.Xaml.Controls.Button element29 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element29).Click += this.BackButton_Click;
                }
                break;
            case 30: // Views\CreateChallengesPage.xaml line 1311
                {
                    global::Windows.UI.Xaml.Controls.ComboBox element30 = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)element30).SelectionChanged += this.ComboBox_SelectionChanged;
                }
                break;
            case 34: // Views\CreateChallengesPage.xaml line 1279
                {
                    global::Windows.UI.Xaml.Controls.Grid element34 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element34).Tapped += this.StackPanel_Tapped;
                }
                break;
            case 35: // Views\CreateChallengesPage.xaml line 1296
                {
                    global::Windows.UI.Xaml.Controls.Button element35 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element35).Click += this.BackButton_Click;
                }
                break;
            case 40: // Views\CreateChallengesPage.xaml line 1179
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element40 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element40).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 41: // Views\CreateChallengesPage.xaml line 1160
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element41 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element41).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element41).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 42: // Views\CreateChallengesPage.xaml line 1167
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element42 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element42).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 43: // Views\CreateChallengesPage.xaml line 1174
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element43 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element43).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 44: // Views\CreateChallengesPage.xaml line 981
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element44 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element44).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 45: // Views\CreateChallengesPage.xaml line 1136
                {
                    this.EmptyScreenshotChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 46: // Views\CreateChallengesPage.xaml line 1127
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element46 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element46).Click += this.SaveButton_Click;
                }
                break;
            case 47: // Views\CreateChallengesPage.xaml line 1130
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element47 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element47).Click += this.BackButton_Click;
                }
                break;
            case 48: // Views\CreateChallengesPage.xaml line 1037
                {
                    global::Windows.UI.Xaml.Controls.Button element48 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element48).Click += this.BackButton_Click;
                }
                break;
            case 49: // Views\CreateChallengesPage.xaml line 1107
                {
                    global::Windows.UI.Xaml.Controls.ComboBox element49 = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)element49).SelectionChanged += this.ComboBox_SelectionChanged;
                }
                break;
            case 53: // Views\CreateChallengesPage.xaml line 1075
                {
                    global::Windows.UI.Xaml.Controls.Grid element53 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element53).Tapped += this.StackPanel_Tapped;
                }
                break;
            case 54: // Views\CreateChallengesPage.xaml line 1092
                {
                    global::Windows.UI.Xaml.Controls.Button element54 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element54).Click += this.BackButton_Click;
                }
                break;
            case 59: // Views\CreateChallengesPage.xaml line 975
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element59 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element59).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 60: // Views\CreateChallengesPage.xaml line 956
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element60 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element60).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element60).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 61: // Views\CreateChallengesPage.xaml line 963
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element61 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element61).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 62: // Views\CreateChallengesPage.xaml line 970
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element62 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element62).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 63: // Views\CreateChallengesPage.xaml line 849
                {
                    this.QuizChallengeList = (global::Windows.UI.Xaml.Controls.ListView)(target);
                    ((global::Windows.UI.Xaml.Controls.ListView)this.QuizChallengeList).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 64: // Views\CreateChallengesPage.xaml line 932
                {
                    this.EmptyQuizChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 65: // Views\CreateChallengesPage.xaml line 923
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element65 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element65).Click += this.SaveButton_Click;
                }
                break;
            case 66: // Views\CreateChallengesPage.xaml line 926
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element66 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element66).Click += this.BackButton_Click;
                }
                break;
            case 67: // Views\CreateChallengesPage.xaml line 893
                {
                    global::Windows.UI.Xaml.Controls.Button element67 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element67).Click += this.BackButton_Click;
                }
                break;
            case 68: // Views\CreateChallengesPage.xaml line 913
                {
                    this.QuizAnswer = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 72: // Views\CreateChallengesPage.xaml line 843
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element72 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element72).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 73: // Views\CreateChallengesPage.xaml line 824
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element73 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element73).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element73).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 74: // Views\CreateChallengesPage.xaml line 831
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element74 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element74).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 75: // Views\CreateChallengesPage.xaml line 838
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element75 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element75).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 76: // Views\CreateChallengesPage.xaml line 645
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element76 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element76).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 77: // Views\CreateChallengesPage.xaml line 800
                {
                    this.EmptyMusicChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 78: // Views\CreateChallengesPage.xaml line 791
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element78 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element78).Click += this.SaveButton_Click;
                }
                break;
            case 79: // Views\CreateChallengesPage.xaml line 794
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element79 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element79).Click += this.BackButton_Click;
                }
                break;
            case 80: // Views\CreateChallengesPage.xaml line 701
                {
                    global::Windows.UI.Xaml.Controls.Button element80 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element80).Click += this.BackButton_Click;
                }
                break;
            case 81: // Views\CreateChallengesPage.xaml line 771
                {
                    global::Windows.UI.Xaml.Controls.ComboBox element81 = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)element81).SelectionChanged += this.ComboBox_SelectionChanged;
                }
                break;
            case 85: // Views\CreateChallengesPage.xaml line 739
                {
                    global::Windows.UI.Xaml.Controls.Grid element85 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element85).Tapped += this.StackPanel_Tapped;
                }
                break;
            case 86: // Views\CreateChallengesPage.xaml line 756
                {
                    global::Windows.UI.Xaml.Controls.Button element86 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element86).Click += this.BackButton_Click;
                }
                break;
            case 91: // Views\CreateChallengesPage.xaml line 639
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element91 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element91).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 92: // Views\CreateChallengesPage.xaml line 620
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element92 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element92).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element92).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 93: // Views\CreateChallengesPage.xaml line 627
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element93 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element93).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 94: // Views\CreateChallengesPage.xaml line 634
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element94 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element94).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 95: // Views\CreateChallengesPage.xaml line 475
                {
                    this.MultipleChoiceChallengeList = (global::Windows.UI.Xaml.Controls.ListView)(target);
                    ((global::Windows.UI.Xaml.Controls.ListView)this.MultipleChoiceChallengeList).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 96: // Views\CreateChallengesPage.xaml line 596
                {
                    this.EmptyMultipleChoiceChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 97: // Views\CreateChallengesPage.xaml line 587
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element97 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element97).Click += this.SaveButton_Click;
                }
                break;
            case 98: // Views\CreateChallengesPage.xaml line 590
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element98 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element98).Click += this.BackButton_Click;
                }
                break;
            case 99: // Views\CreateChallengesPage.xaml line 524
                {
                    global::Windows.UI.Xaml.Controls.Button element99 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element99).Click += this.BackButton_Click;
                }
                break;
            case 100: // Views\CreateChallengesPage.xaml line 578
                {
                    this.MultipleChoiceDummy3 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 101: // Views\CreateChallengesPage.xaml line 570
                {
                    this.MultipleChoiceDummy2 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 102: // Views\CreateChallengesPage.xaml line 562
                {
                    this.MultipleChoiceDummy1 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 103: // Views\CreateChallengesPage.xaml line 554
                {
                    this.MultipleChoiceAnswer = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 107: // Views\CreateChallengesPage.xaml line 469
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element107 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element107).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 108: // Views\CreateChallengesPage.xaml line 450
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element108 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element108).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element108).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 109: // Views\CreateChallengesPage.xaml line 457
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element109 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element109).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 110: // Views\CreateChallengesPage.xaml line 464
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element110 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element110).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 111: // Views\CreateChallengesPage.xaml line 269
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element111 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element111).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 112: // Views\CreateChallengesPage.xaml line 426
                {
                    this.EmptyCrewChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 113: // Views\CreateChallengesPage.xaml line 417
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element113 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element113).Click += this.SaveButton_Click;
                }
                break;
            case 114: // Views\CreateChallengesPage.xaml line 420
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element114 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element114).Click += this.BackButton_Click;
                }
                break;
            case 115: // Views\CreateChallengesPage.xaml line 328
                {
                    global::Windows.UI.Xaml.Controls.Button element115 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element115).Click += this.BackButton_Click;
                }
                break;
            case 116: // Views\CreateChallengesPage.xaml line 397
                {
                    global::Windows.UI.Xaml.Controls.ComboBox element116 = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)element116).SelectionChanged += this.ComboBox_SelectionChanged;
                }
                break;
            case 120: // Views\CreateChallengesPage.xaml line 365
                {
                    global::Windows.UI.Xaml.Controls.Grid element120 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element120).Tapped += this.StackPanel_Tapped;
                }
                break;
            case 121: // Views\CreateChallengesPage.xaml line 382
                {
                    global::Windows.UI.Xaml.Controls.Button element121 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element121).Click += this.BackButton_Click;
                }
                break;
            case 126: // Views\CreateChallengesPage.xaml line 263
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element126 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element126).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 127: // Views\CreateChallengesPage.xaml line 244
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element127 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element127).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element127).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 128: // Views\CreateChallengesPage.xaml line 251
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element128 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element128).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 129: // Views\CreateChallengesPage.xaml line 258
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element129 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element129).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 130: // Views\CreateChallengesPage.xaml line 62
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element130 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element130).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 131: // Views\CreateChallengesPage.xaml line 220
                {
                    this.EmptyAudienceChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 132: // Views\CreateChallengesPage.xaml line 211
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element132 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element132).Click += this.SaveButton_Click;
                }
                break;
            case 133: // Views\CreateChallengesPage.xaml line 214
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element133 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element133).Click += this.BackButton_Click;
                }
                break;
            case 134: // Views\CreateChallengesPage.xaml line 121
                {
                    global::Windows.UI.Xaml.Controls.Button element134 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element134).Click += this.BackButton_Click;
                }
                break;
            case 135: // Views\CreateChallengesPage.xaml line 191
                {
                    global::Windows.UI.Xaml.Controls.ComboBox element135 = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)element135).SelectionChanged += this.ComboBox_SelectionChanged;
                }
                break;
            case 139: // Views\CreateChallengesPage.xaml line 159
                {
                    global::Windows.UI.Xaml.Controls.Grid element139 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element139).Tapped += this.StackPanel_Tapped;
                }
                break;
            case 140: // Views\CreateChallengesPage.xaml line 176
                {
                    global::Windows.UI.Xaml.Controls.Button element140 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element140).Click += this.BackButton_Click;
                }
                break;
            case 145: // Views\CreateChallengesPage.xaml line 56
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element145 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element145).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 146: // Views\CreateChallengesPage.xaml line 37
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element146 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element146).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element146).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 147: // Views\CreateChallengesPage.xaml line 44
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element147 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element147).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 148: // Views\CreateChallengesPage.xaml line 51
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element148 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element148).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\CreateChallengesPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    CreateChallengesPage_obj1_Bindings bindings = new CreateChallengesPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 13: // Views\CreateChallengesPage.xaml line 1524
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element13 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    CreateChallengesPage_obj13_Bindings bindings = new CreateChallengesPage_obj13_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element13.DataContext);
                    element13.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element13, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element13, bindings);
                }
                break;
            case 18: // Views\CreateChallengesPage.xaml line 1400
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element18 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj18_Bindings bindings = new CreateChallengesPage_obj18_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element18.DataContext);
                    element18.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element18, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element18, bindings);
                }
                break;
            case 32: // Views\CreateChallengesPage.xaml line 1316
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element32 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    CreateChallengesPage_obj32_Bindings bindings = new CreateChallengesPage_obj32_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element32.DataContext);
                    element32.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element32, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element32, bindings);
                }
                break;
            case 37: // Views\CreateChallengesPage.xaml line 1196
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element37 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj37_Bindings bindings = new CreateChallengesPage_obj37_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element37.DataContext);
                    element37.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element37, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element37, bindings);
                }
                break;
            case 51: // Views\CreateChallengesPage.xaml line 1112
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element51 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    CreateChallengesPage_obj51_Bindings bindings = new CreateChallengesPage_obj51_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element51.DataContext);
                    element51.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element51, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element51, bindings);
                }
                break;
            case 56: // Views\CreateChallengesPage.xaml line 992
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element56 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj56_Bindings bindings = new CreateChallengesPage_obj56_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element56.DataContext);
                    element56.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element56, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element56, bindings);
                }
                break;
            case 70: // Views\CreateChallengesPage.xaml line 858
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element70 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj70_Bindings bindings = new CreateChallengesPage_obj70_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element70.DataContext);
                    element70.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element70, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element70, bindings);
                }
                break;
            case 83: // Views\CreateChallengesPage.xaml line 776
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element83 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    CreateChallengesPage_obj83_Bindings bindings = new CreateChallengesPage_obj83_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element83.DataContext);
                    element83.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element83, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element83, bindings);
                }
                break;
            case 88: // Views\CreateChallengesPage.xaml line 656
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element88 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj88_Bindings bindings = new CreateChallengesPage_obj88_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element88.DataContext);
                    element88.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element88, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element88, bindings);
                }
                break;
            case 105: // Views\CreateChallengesPage.xaml line 484
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element105 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj105_Bindings bindings = new CreateChallengesPage_obj105_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element105.DataContext);
                    element105.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element105, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element105, bindings);
                }
                break;
            case 118: // Views\CreateChallengesPage.xaml line 402
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element118 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    CreateChallengesPage_obj118_Bindings bindings = new CreateChallengesPage_obj118_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element118.DataContext);
                    element118.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element118, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element118, bindings);
                }
                break;
            case 123: // Views\CreateChallengesPage.xaml line 280
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element123 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj123_Bindings bindings = new CreateChallengesPage_obj123_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element123.DataContext);
                    element123.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element123, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element123, bindings);
                }
                break;
            case 137: // Views\CreateChallengesPage.xaml line 196
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element137 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    CreateChallengesPage_obj137_Bindings bindings = new CreateChallengesPage_obj137_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element137.DataContext);
                    element137.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element137, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element137, bindings);
                }
                break;
            case 142: // Views\CreateChallengesPage.xaml line 73
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element142 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj142_Bindings bindings = new CreateChallengesPage_obj142_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element142.DataContext);
                    element142.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element142, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element142, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

