#pragma checksum "C:\Users\upfor\Desktop\Skole\DotNET\Backup\SyntaxError.V2\SyntaxError.V2.App\Views\CreateChallengesPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "75913C5398D474791E7C747FA0EDC67E"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SyntaxError.V2.App.Views
{
    partial class CreateChallengesPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Source = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj11_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.ChallengeObjects.Game dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj11;
            private global::Windows.UI.Xaml.Controls.TextBlock obj12;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj12TextDisabled = false;

            public CreateChallengesPage_obj11_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 1525 && columnNumber == 68)
                {
                    isobj12TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 11: // Views\CreateChallengesPage.xaml line 1524
                        this.obj11 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 12: // Views\CreateChallengesPage.xaml line 1525
                        this.obj12 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj11.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.ChallengeObjects.Game) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.ChallengeObjects.Game)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1525
                    if (!isobj12TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj12, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj16_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.SologameChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj16;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj17;
            private global::Windows.UI.Xaml.Controls.TextBlock obj18;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj17SourceDisabled = false;
            private static bool isobj18TextDisabled = false;

            public CreateChallengesPage_obj16_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 1407 && columnNumber == 59)
                {
                    isobj17SourceDisabled = true;
                }
                else if (lineNumber == 1413 && columnNumber == 49)
                {
                    isobj18TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 16: // Views\CreateChallengesPage.xaml line 1400
                        this.obj16 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 17: // Views\CreateChallengesPage.xaml line 1405
                        this.obj17 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 18: // Views\CreateChallengesPage.xaml line 1409
                        this.obj18 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj16.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.SologameChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.SologameChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.SologameChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game(obj.Game, phase);
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                    }
                }
            }
            private void Update_Game(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game_URI(obj.URI, phase);
                    }
                }
            }
            private void Update_Game_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1405
                    if (!isobj17SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj17, obj, null);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1409
                    if (!isobj18TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj18, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj30_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.ChallengeObjects.Image dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj30;
            private global::Windows.UI.Xaml.Controls.TextBlock obj31;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj31TextDisabled = false;

            public CreateChallengesPage_obj30_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 1317 && columnNumber == 68)
                {
                    isobj31TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 30: // Views\CreateChallengesPage.xaml line 1316
                        this.obj30 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 31: // Views\CreateChallengesPage.xaml line 1317
                        this.obj31 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj30.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.ChallengeObjects.Image) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.ChallengeObjects.Image)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.ChallengeObjects.Image obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1317
                    if (!isobj31TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj31, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj35_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj35;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj36;
            private global::Windows.UI.Xaml.Controls.TextBlock obj37;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj36SourceDisabled = false;
            private static bool isobj37TextDisabled = false;

            public CreateChallengesPage_obj35_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 1203 && columnNumber == 59)
                {
                    isobj36SourceDisabled = true;
                }
                else if (lineNumber == 1208 && columnNumber == 45)
                {
                    isobj37TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 35: // Views\CreateChallengesPage.xaml line 1196
                        this.obj35 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 36: // Views\CreateChallengesPage.xaml line 1201
                        this.obj36 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 37: // Views\CreateChallengesPage.xaml line 1204
                        this.obj37 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj35.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Image(obj.Image, phase);
                    }
                }
            }
            private void Update_Image(global::SyntaxError.V2.Modell.ChallengeObjects.Image obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Image_URI(obj.URI, phase);
                        this.Update_Image_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Image_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1201
                    if (!isobj36SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj36, obj, null);
                    }
                }
            }
            private void Update_Image_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1204
                    if (!isobj37TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj37, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj49_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.ChallengeObjects.Image dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj49;
            private global::Windows.UI.Xaml.Controls.TextBlock obj50;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj50TextDisabled = false;

            public CreateChallengesPage_obj49_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 1113 && columnNumber == 68)
                {
                    isobj50TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 49: // Views\CreateChallengesPage.xaml line 1112
                        this.obj49 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 50: // Views\CreateChallengesPage.xaml line 1113
                        this.obj50 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj49.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.ChallengeObjects.Image) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.ChallengeObjects.Image)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.ChallengeObjects.Image obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1113
                    if (!isobj50TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj50, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj54_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj54;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj55;
            private global::Windows.UI.Xaml.Controls.TextBlock obj56;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj55SourceDisabled = false;
            private static bool isobj56TextDisabled = false;

            public CreateChallengesPage_obj54_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 999 && columnNumber == 59)
                {
                    isobj55SourceDisabled = true;
                }
                else if (lineNumber == 1004 && columnNumber == 45)
                {
                    isobj56TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 54: // Views\CreateChallengesPage.xaml line 992
                        this.obj54 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 55: // Views\CreateChallengesPage.xaml line 997
                        this.obj55 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 56: // Views\CreateChallengesPage.xaml line 1000
                        this.obj56 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj54.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Image(obj.Image, phase);
                    }
                }
            }
            private void Update_Image(global::SyntaxError.V2.Modell.ChallengeObjects.Image obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Image_URI(obj.URI, phase);
                        this.Update_Image_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Image_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 997
                    if (!isobj55SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj55, obj, null);
                    }
                }
            }
            private void Update_Image_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1000
                    if (!isobj56TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj56, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj68_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.QuizChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj68;
            private global::Windows.UI.Xaml.Controls.TextBlock obj69;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj69TextDisabled = false;

            public CreateChallengesPage_obj68_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 859 && columnNumber == 61)
                {
                    isobj69TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 68: // Views\CreateChallengesPage.xaml line 858
                        this.obj68 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 69: // Views\CreateChallengesPage.xaml line 859
                        this.obj69 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj68.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.QuizChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.QuizChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.QuizChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 859
                    if (!isobj69TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj69, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj81_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.ChallengeObjects.Music dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj81;
            private global::Windows.UI.Xaml.Controls.TextBlock obj82;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj82TextDisabled = false;

            public CreateChallengesPage_obj81_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 777 && columnNumber == 68)
                {
                    isobj82TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 81: // Views\CreateChallengesPage.xaml line 776
                        this.obj81 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 82: // Views\CreateChallengesPage.xaml line 777
                        this.obj82 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj81.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.ChallengeObjects.Music) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.ChallengeObjects.Music)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.ChallengeObjects.Music obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 777
                    if (!isobj82TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj82, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj86_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.MusicChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj86;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj87;
            private global::Windows.UI.Xaml.Controls.TextBlock obj88;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj87SourceDisabled = false;
            private static bool isobj88TextDisabled = false;

            public CreateChallengesPage_obj86_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 663 && columnNumber == 59)
                {
                    isobj87SourceDisabled = true;
                }
                else if (lineNumber == 668 && columnNumber == 45)
                {
                    isobj88TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 86: // Views\CreateChallengesPage.xaml line 656
                        this.obj86 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 87: // Views\CreateChallengesPage.xaml line 661
                        this.obj87 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 88: // Views\CreateChallengesPage.xaml line 664
                        this.obj88 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj86.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.MusicChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.MusicChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.MusicChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Song(obj.Song, phase);
                    }
                }
            }
            private void Update_Song(global::SyntaxError.V2.Modell.ChallengeObjects.Music obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Song_URI(obj.URI, phase);
                        this.Update_Song_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Song_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 661
                    if (!isobj87SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj87, obj, null);
                    }
                }
            }
            private void Update_Song_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 664
                    if (!isobj88TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj88, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj103_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj103;
            private global::Windows.UI.Xaml.Controls.TextBlock obj104;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj104TextDisabled = false;

            public CreateChallengesPage_obj103_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 490 && columnNumber == 61)
                {
                    isobj104TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 103: // Views\CreateChallengesPage.xaml line 484
                        this.obj103 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 104: // Views\CreateChallengesPage.xaml line 490
                        this.obj104 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj103.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 490
                    if (!isobj104TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj104, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj116_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.ChallengeObjects.Game dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj116;
            private global::Windows.UI.Xaml.Controls.TextBlock obj117;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj117TextDisabled = false;

            public CreateChallengesPage_obj116_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 403 && columnNumber == 68)
                {
                    isobj117TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 116: // Views\CreateChallengesPage.xaml line 402
                        this.obj116 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 117: // Views\CreateChallengesPage.xaml line 403
                        this.obj117 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj116.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.ChallengeObjects.Game) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.ChallengeObjects.Game)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 403
                    if (!isobj117TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj117, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj121_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.CrewChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj121;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj122;
            private global::Windows.UI.Xaml.Controls.TextBlock obj123;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj122SourceDisabled = false;
            private static bool isobj123TextDisabled = false;

            public CreateChallengesPage_obj121_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 287 && columnNumber == 59)
                {
                    isobj122SourceDisabled = true;
                }
                else if (lineNumber == 293 && columnNumber == 49)
                {
                    isobj123TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 121: // Views\CreateChallengesPage.xaml line 280
                        this.obj121 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 122: // Views\CreateChallengesPage.xaml line 285
                        this.obj122 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 123: // Views\CreateChallengesPage.xaml line 289
                        this.obj123 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj121.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.CrewChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.CrewChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.CrewChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game(obj.Game, phase);
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                    }
                }
            }
            private void Update_Game(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game_URI(obj.URI, phase);
                    }
                }
            }
            private void Update_Game_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 285
                    if (!isobj122SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj122, obj, null);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 289
                    if (!isobj123TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj123, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj135_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.ChallengeObjects.Game dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj135;
            private global::Windows.UI.Xaml.Controls.TextBlock obj136;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj136TextDisabled = false;

            public CreateChallengesPage_obj135_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 197 && columnNumber == 68)
                {
                    isobj136TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 135: // Views\CreateChallengesPage.xaml line 196
                        this.obj135 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 136: // Views\CreateChallengesPage.xaml line 197
                        this.obj136 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj135.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.ChallengeObjects.Game) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.ChallengeObjects.Game)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 197
                    if (!isobj136TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj136, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj140_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.AudienceChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj140;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj141;
            private global::Windows.UI.Xaml.Controls.TextBlock obj142;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj141SourceDisabled = false;
            private static bool isobj142TextDisabled = false;

            public CreateChallengesPage_obj140_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 80 && columnNumber == 59)
                {
                    isobj141SourceDisabled = true;
                }
                else if (lineNumber == 86 && columnNumber == 49)
                {
                    isobj142TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 140: // Views\CreateChallengesPage.xaml line 73
                        this.obj140 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 141: // Views\CreateChallengesPage.xaml line 78
                        this.obj141 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 142: // Views\CreateChallengesPage.xaml line 82
                        this.obj142 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj140.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.AudienceChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.AudienceChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.AudienceChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game(obj.Game, phase);
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                    }
                }
            }
            private void Update_Game(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game_URI(obj.URI, phase);
                    }
                }
            }
            private void Update_Game_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 78
                    if (!isobj141SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj141, obj, null);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 82
                    if (!isobj142TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj142, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.App.Views.CreateChallengesPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj4;
            private global::Windows.UI.Xaml.Controls.ComboBox obj9;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj23;
            private global::Windows.UI.Xaml.Controls.ComboBox obj28;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj42;
            private global::Windows.UI.Xaml.Controls.ComboBox obj47;
            private global::Windows.UI.Xaml.Controls.ListView obj61;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj74;
            private global::Windows.UI.Xaml.Controls.ComboBox obj79;
            private global::Windows.UI.Xaml.Controls.ListView obj93;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj109;
            private global::Windows.UI.Xaml.Controls.ComboBox obj114;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj128;
            private global::Windows.UI.Xaml.Controls.ComboBox obj133;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4ItemsSourceDisabled = false;
            private static bool isobj9ItemsSourceDisabled = false;
            private static bool isobj23ItemsSourceDisabled = false;
            private static bool isobj28ItemsSourceDisabled = false;
            private static bool isobj42ItemsSourceDisabled = false;
            private static bool isobj47ItemsSourceDisabled = false;
            private static bool isobj61ItemsSourceDisabled = false;
            private static bool isobj74ItemsSourceDisabled = false;
            private static bool isobj79ItemsSourceDisabled = false;
            private static bool isobj93ItemsSourceDisabled = false;
            private static bool isobj109ItemsSourceDisabled = false;
            private static bool isobj114ItemsSourceDisabled = false;
            private static bool isobj128ItemsSourceDisabled = false;
            private static bool isobj133ItemsSourceDisabled = false;

            public CreateChallengesPage_obj1_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 1389 && columnNumber == 48)
                {
                    isobj4ItemsSourceDisabled = true;
                }
                else if (lineNumber == 1519 && columnNumber == 80)
                {
                    isobj9ItemsSourceDisabled = true;
                }
                else if (lineNumber == 1185 && columnNumber == 48)
                {
                    isobj23ItemsSourceDisabled = true;
                }
                else if (lineNumber == 1311 && columnNumber == 80)
                {
                    isobj28ItemsSourceDisabled = true;
                }
                else if (lineNumber == 981 && columnNumber == 48)
                {
                    isobj42ItemsSourceDisabled = true;
                }
                else if (lineNumber == 1107 && columnNumber == 80)
                {
                    isobj47ItemsSourceDisabled = true;
                }
                else if (lineNumber == 849 && columnNumber == 31)
                {
                    isobj61ItemsSourceDisabled = true;
                }
                else if (lineNumber == 645 && columnNumber == 48)
                {
                    isobj74ItemsSourceDisabled = true;
                }
                else if (lineNumber == 771 && columnNumber == 80)
                {
                    isobj79ItemsSourceDisabled = true;
                }
                else if (lineNumber == 475 && columnNumber == 31)
                {
                    isobj93ItemsSourceDisabled = true;
                }
                else if (lineNumber == 269 && columnNumber == 48)
                {
                    isobj109ItemsSourceDisabled = true;
                }
                else if (lineNumber == 397 && columnNumber == 80)
                {
                    isobj114ItemsSourceDisabled = true;
                }
                else if (lineNumber == 62 && columnNumber == 48)
                {
                    isobj128ItemsSourceDisabled = true;
                }
                else if (lineNumber == 191 && columnNumber == 80)
                {
                    isobj133ItemsSourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 4: // Views\CreateChallengesPage.xaml line 1389
                        this.obj4 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 9: // Views\CreateChallengesPage.xaml line 1519
                        this.obj9 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    case 23: // Views\CreateChallengesPage.xaml line 1185
                        this.obj23 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 28: // Views\CreateChallengesPage.xaml line 1311
                        this.obj28 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    case 42: // Views\CreateChallengesPage.xaml line 981
                        this.obj42 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 47: // Views\CreateChallengesPage.xaml line 1107
                        this.obj47 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    case 61: // Views\CreateChallengesPage.xaml line 849
                        this.obj61 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 74: // Views\CreateChallengesPage.xaml line 645
                        this.obj74 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 79: // Views\CreateChallengesPage.xaml line 771
                        this.obj79 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    case 93: // Views\CreateChallengesPage.xaml line 475
                        this.obj93 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 109: // Views\CreateChallengesPage.xaml line 269
                        this.obj109 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 114: // Views\CreateChallengesPage.xaml line 397
                        this.obj114 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    case 128: // Views\CreateChallengesPage.xaml line 62
                        this.obj128 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 133: // Views\CreateChallengesPage.xaml line 191
                        this.obj133 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.App.Views.CreateChallengesPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.App.Views.CreateChallengesPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::SyntaxError.V2.App.ViewModels.CreateChallengesViewModel obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_FilteredSolo(obj.FilteredSolo, phase);
                        this.Update_ViewModel_Games(obj.Games, phase);
                        this.Update_ViewModel_FilteredSilhu(obj.FilteredSilhu, phase);
                        this.Update_ViewModel_Images(obj.Images, phase);
                        this.Update_ViewModel_FilteredScreen(obj.FilteredScreen, phase);
                        this.Update_ViewModel_FilteredQuiz(obj.FilteredQuiz, phase);
                        this.Update_ViewModel_FilteredMusic(obj.FilteredMusic, phase);
                        this.Update_ViewModel_Music(obj.Music, phase);
                        this.Update_ViewModel_FilteredMulti(obj.FilteredMulti, phase);
                        this.Update_ViewModel_FilteredCrew(obj.FilteredCrew, phase);
                        this.Update_ViewModel_FilteredAudience(obj.FilteredAudience, phase);
                    }
                }
            }
            private void Update_ViewModel_FilteredSolo(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.SologameChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1389
                    if (!isobj4ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj4, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Games(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.ChallengeObjects.Game> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1519
                    if (!isobj9ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj9, obj, null);
                    }
                    // Views\CreateChallengesPage.xaml line 397
                    if (!isobj114ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj114, obj, null);
                    }
                    // Views\CreateChallengesPage.xaml line 191
                    if (!isobj133ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj133, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredSilhu(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1185
                    if (!isobj23ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj23, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Images(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.ChallengeObjects.Image> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1311
                    if (!isobj28ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj28, obj, null);
                    }
                    // Views\CreateChallengesPage.xaml line 1107
                    if (!isobj47ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj47, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredScreen(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 981
                    if (!isobj42ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj42, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredQuiz(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.QuizChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 849
                    if (!isobj61ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj61, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredMusic(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.MusicChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 645
                    if (!isobj74ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj74, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Music(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.ChallengeObjects.Music> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 771
                    if (!isobj79ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj79, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredMulti(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 475
                    if (!isobj93ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj93, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredCrew(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.CrewChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 269
                    if (!isobj109ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj109, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredAudience(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.AudienceChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 62
                    if (!isobj128ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj128, obj, null);
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\CreateChallengesPage.xaml line 14
                {
                    this.ContentArea = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 3: // Views\CreateChallengesPage.xaml line 17
                {
                    this.ChallengeList = (global::Windows.UI.Xaml.Controls.Pivot)(target);
                    ((global::Windows.UI.Xaml.Controls.Pivot)this.ChallengeList).SelectionChanged += this.ChallengeList_SelectionChanged;
                }
                break;
            case 4: // Views\CreateChallengesPage.xaml line 1389
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element4 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element4).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 5: // Views\CreateChallengesPage.xaml line 1548
                {
                    this.EmptySologameChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 6: // Views\CreateChallengesPage.xaml line 1539
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element6 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element6).Click += this.SaveButton_Click;
                }
                break;
            case 7: // Views\CreateChallengesPage.xaml line 1542
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element7 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element7).Click += this.BackButton_Click;
                }
                break;
            case 8: // Views\CreateChallengesPage.xaml line 1448
                {
                    global::Windows.UI.Xaml.Controls.Button element8 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element8).Click += this.BackButton_Click;
                }
                break;
            case 9: // Views\CreateChallengesPage.xaml line 1519
                {
                    global::Windows.UI.Xaml.Controls.ComboBox element9 = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)element9).SelectionChanged += this.ComboBox_SelectionChanged;
                }
                break;
            case 13: // Views\CreateChallengesPage.xaml line 1486
                {
                    global::Windows.UI.Xaml.Controls.Grid element13 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element13).Tapped += this.StackPanel_Tapped;
                }
                break;
            case 14: // Views\CreateChallengesPage.xaml line 1503
                {
                    global::Windows.UI.Xaml.Controls.Button element14 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element14).Click += this.BackButton_Click;
                }
                break;
            case 19: // Views\CreateChallengesPage.xaml line 1383
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element19 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element19).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 20: // Views\CreateChallengesPage.xaml line 1364
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element20 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element20).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element20).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 21: // Views\CreateChallengesPage.xaml line 1371
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element21 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element21).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 22: // Views\CreateChallengesPage.xaml line 1378
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element22 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element22).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 23: // Views\CreateChallengesPage.xaml line 1185
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element23 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element23).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 24: // Views\CreateChallengesPage.xaml line 1340
                {
                    this.EmptySilhouetteChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 25: // Views\CreateChallengesPage.xaml line 1331
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element25 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element25).Click += this.SaveButton_Click;
                }
                break;
            case 26: // Views\CreateChallengesPage.xaml line 1334
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element26 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element26).Click += this.BackButton_Click;
                }
                break;
            case 27: // Views\CreateChallengesPage.xaml line 1241
                {
                    global::Windows.UI.Xaml.Controls.Button element27 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element27).Click += this.BackButton_Click;
                }
                break;
            case 28: // Views\CreateChallengesPage.xaml line 1311
                {
                    global::Windows.UI.Xaml.Controls.ComboBox element28 = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)element28).SelectionChanged += this.ComboBox_SelectionChanged;
                }
                break;
            case 32: // Views\CreateChallengesPage.xaml line 1279
                {
                    global::Windows.UI.Xaml.Controls.Grid element32 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element32).Tapped += this.StackPanel_Tapped;
                }
                break;
            case 33: // Views\CreateChallengesPage.xaml line 1296
                {
                    global::Windows.UI.Xaml.Controls.Button element33 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element33).Click += this.BackButton_Click;
                }
                break;
            case 38: // Views\CreateChallengesPage.xaml line 1179
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element38 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element38).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 39: // Views\CreateChallengesPage.xaml line 1160
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element39 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element39).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element39).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 40: // Views\CreateChallengesPage.xaml line 1167
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element40 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element40).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 41: // Views\CreateChallengesPage.xaml line 1174
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element41 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element41).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 42: // Views\CreateChallengesPage.xaml line 981
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element42 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element42).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 43: // Views\CreateChallengesPage.xaml line 1136
                {
                    this.EmptyScreenshotChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 44: // Views\CreateChallengesPage.xaml line 1127
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element44 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element44).Click += this.SaveButton_Click;
                }
                break;
            case 45: // Views\CreateChallengesPage.xaml line 1130
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element45 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element45).Click += this.BackButton_Click;
                }
                break;
            case 46: // Views\CreateChallengesPage.xaml line 1037
                {
                    global::Windows.UI.Xaml.Controls.Button element46 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element46).Click += this.BackButton_Click;
                }
                break;
            case 47: // Views\CreateChallengesPage.xaml line 1107
                {
                    global::Windows.UI.Xaml.Controls.ComboBox element47 = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)element47).SelectionChanged += this.ComboBox_SelectionChanged;
                }
                break;
            case 51: // Views\CreateChallengesPage.xaml line 1075
                {
                    global::Windows.UI.Xaml.Controls.Grid element51 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element51).Tapped += this.StackPanel_Tapped;
                }
                break;
            case 52: // Views\CreateChallengesPage.xaml line 1092
                {
                    global::Windows.UI.Xaml.Controls.Button element52 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element52).Click += this.BackButton_Click;
                }
                break;
            case 57: // Views\CreateChallengesPage.xaml line 975
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element57 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element57).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 58: // Views\CreateChallengesPage.xaml line 956
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element58 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element58).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element58).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 59: // Views\CreateChallengesPage.xaml line 963
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element59 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element59).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 60: // Views\CreateChallengesPage.xaml line 970
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element60 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element60).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 61: // Views\CreateChallengesPage.xaml line 849
                {
                    this.QuizChallengeList = (global::Windows.UI.Xaml.Controls.ListView)(target);
                    ((global::Windows.UI.Xaml.Controls.ListView)this.QuizChallengeList).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 62: // Views\CreateChallengesPage.xaml line 932
                {
                    this.EmptyQuizChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 63: // Views\CreateChallengesPage.xaml line 923
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element63 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element63).Click += this.SaveButton_Click;
                }
                break;
            case 64: // Views\CreateChallengesPage.xaml line 926
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element64 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element64).Click += this.BackButton_Click;
                }
                break;
            case 65: // Views\CreateChallengesPage.xaml line 893
                {
                    global::Windows.UI.Xaml.Controls.Button element65 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element65).Click += this.BackButton_Click;
                }
                break;
            case 66: // Views\CreateChallengesPage.xaml line 913
                {
                    this.QuizAnswer = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 70: // Views\CreateChallengesPage.xaml line 843
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element70 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element70).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 71: // Views\CreateChallengesPage.xaml line 824
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element71 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element71).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element71).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 72: // Views\CreateChallengesPage.xaml line 831
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element72 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element72).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 73: // Views\CreateChallengesPage.xaml line 838
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element73 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element73).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 74: // Views\CreateChallengesPage.xaml line 645
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element74 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element74).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 75: // Views\CreateChallengesPage.xaml line 800
                {
                    this.EmptyMusicChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 76: // Views\CreateChallengesPage.xaml line 791
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element76 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element76).Click += this.SaveButton_Click;
                }
                break;
            case 77: // Views\CreateChallengesPage.xaml line 794
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element77 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element77).Click += this.BackButton_Click;
                }
                break;
            case 78: // Views\CreateChallengesPage.xaml line 701
                {
                    global::Windows.UI.Xaml.Controls.Button element78 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element78).Click += this.BackButton_Click;
                }
                break;
            case 79: // Views\CreateChallengesPage.xaml line 771
                {
                    global::Windows.UI.Xaml.Controls.ComboBox element79 = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)element79).SelectionChanged += this.ComboBox_SelectionChanged;
                }
                break;
            case 83: // Views\CreateChallengesPage.xaml line 739
                {
                    global::Windows.UI.Xaml.Controls.Grid element83 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element83).Tapped += this.StackPanel_Tapped;
                }
                break;
            case 84: // Views\CreateChallengesPage.xaml line 756
                {
                    global::Windows.UI.Xaml.Controls.Button element84 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element84).Click += this.BackButton_Click;
                }
                break;
            case 89: // Views\CreateChallengesPage.xaml line 639
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element89 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element89).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 90: // Views\CreateChallengesPage.xaml line 620
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element90 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element90).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element90).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 91: // Views\CreateChallengesPage.xaml line 627
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element91 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element91).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 92: // Views\CreateChallengesPage.xaml line 634
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element92 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element92).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 93: // Views\CreateChallengesPage.xaml line 475
                {
                    this.MultipleChoiceChallengeList = (global::Windows.UI.Xaml.Controls.ListView)(target);
                    ((global::Windows.UI.Xaml.Controls.ListView)this.MultipleChoiceChallengeList).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 94: // Views\CreateChallengesPage.xaml line 596
                {
                    this.EmptyMultipleChoiceChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 95: // Views\CreateChallengesPage.xaml line 587
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element95 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element95).Click += this.SaveButton_Click;
                }
                break;
            case 96: // Views\CreateChallengesPage.xaml line 590
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element96 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element96).Click += this.BackButton_Click;
                }
                break;
            case 97: // Views\CreateChallengesPage.xaml line 524
                {
                    global::Windows.UI.Xaml.Controls.Button element97 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element97).Click += this.BackButton_Click;
                }
                break;
            case 98: // Views\CreateChallengesPage.xaml line 578
                {
                    this.MultipleChoiceDummy3 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 99: // Views\CreateChallengesPage.xaml line 570
                {
                    this.MultipleChoiceDummy2 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 100: // Views\CreateChallengesPage.xaml line 562
                {
                    this.MultipleChoiceDummy1 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 101: // Views\CreateChallengesPage.xaml line 554
                {
                    this.MultipleChoiceAnswer = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 105: // Views\CreateChallengesPage.xaml line 469
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element105 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element105).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 106: // Views\CreateChallengesPage.xaml line 450
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element106 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element106).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element106).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 107: // Views\CreateChallengesPage.xaml line 457
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element107 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element107).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 108: // Views\CreateChallengesPage.xaml line 464
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element108 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element108).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 109: // Views\CreateChallengesPage.xaml line 269
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element109 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element109).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 110: // Views\CreateChallengesPage.xaml line 426
                {
                    this.EmptyCrewChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 111: // Views\CreateChallengesPage.xaml line 417
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element111 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element111).Click += this.SaveButton_Click;
                }
                break;
            case 112: // Views\CreateChallengesPage.xaml line 420
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element112 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element112).Click += this.BackButton_Click;
                }
                break;
            case 113: // Views\CreateChallengesPage.xaml line 328
                {
                    global::Windows.UI.Xaml.Controls.Button element113 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element113).Click += this.BackButton_Click;
                }
                break;
            case 114: // Views\CreateChallengesPage.xaml line 397
                {
                    global::Windows.UI.Xaml.Controls.ComboBox element114 = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)element114).SelectionChanged += this.ComboBox_SelectionChanged;
                }
                break;
            case 118: // Views\CreateChallengesPage.xaml line 365
                {
                    global::Windows.UI.Xaml.Controls.Grid element118 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element118).Tapped += this.StackPanel_Tapped;
                }
                break;
            case 119: // Views\CreateChallengesPage.xaml line 382
                {
                    global::Windows.UI.Xaml.Controls.Button element119 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element119).Click += this.BackButton_Click;
                }
                break;
            case 124: // Views\CreateChallengesPage.xaml line 263
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element124 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element124).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 125: // Views\CreateChallengesPage.xaml line 244
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element125 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element125).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element125).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 126: // Views\CreateChallengesPage.xaml line 251
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element126 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element126).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 127: // Views\CreateChallengesPage.xaml line 258
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element127 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element127).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 128: // Views\CreateChallengesPage.xaml line 62
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element128 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element128).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 129: // Views\CreateChallengesPage.xaml line 220
                {
                    this.EmptyAudienceChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 130: // Views\CreateChallengesPage.xaml line 211
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element130 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element130).Click += this.SaveButton_Click;
                }
                break;
            case 131: // Views\CreateChallengesPage.xaml line 214
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element131 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element131).Click += this.BackButton_Click;
                }
                break;
            case 132: // Views\CreateChallengesPage.xaml line 121
                {
                    global::Windows.UI.Xaml.Controls.Button element132 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element132).Click += this.BackButton_Click;
                }
                break;
            case 133: // Views\CreateChallengesPage.xaml line 191
                {
                    global::Windows.UI.Xaml.Controls.ComboBox element133 = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)element133).SelectionChanged += this.ComboBox_SelectionChanged;
                }
                break;
            case 137: // Views\CreateChallengesPage.xaml line 159
                {
                    global::Windows.UI.Xaml.Controls.Grid element137 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element137).Tapped += this.StackPanel_Tapped;
                }
                break;
            case 138: // Views\CreateChallengesPage.xaml line 176
                {
                    global::Windows.UI.Xaml.Controls.Button element138 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element138).Click += this.BackButton_Click;
                }
                break;
            case 143: // Views\CreateChallengesPage.xaml line 56
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element143 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element143).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 144: // Views\CreateChallengesPage.xaml line 37
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element144 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element144).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element144).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 145: // Views\CreateChallengesPage.xaml line 44
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element145 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element145).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 146: // Views\CreateChallengesPage.xaml line 51
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element146 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element146).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.18362.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\CreateChallengesPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    CreateChallengesPage_obj1_Bindings bindings = new CreateChallengesPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 11: // Views\CreateChallengesPage.xaml line 1524
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element11 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    CreateChallengesPage_obj11_Bindings bindings = new CreateChallengesPage_obj11_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element11.DataContext);
                    element11.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element11, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element11, bindings);
                }
                break;
            case 16: // Views\CreateChallengesPage.xaml line 1400
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element16 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj16_Bindings bindings = new CreateChallengesPage_obj16_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element16.DataContext);
                    element16.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element16, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element16, bindings);
                }
                break;
            case 30: // Views\CreateChallengesPage.xaml line 1316
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element30 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    CreateChallengesPage_obj30_Bindings bindings = new CreateChallengesPage_obj30_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element30.DataContext);
                    element30.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element30, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element30, bindings);
                }
                break;
            case 35: // Views\CreateChallengesPage.xaml line 1196
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element35 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj35_Bindings bindings = new CreateChallengesPage_obj35_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element35.DataContext);
                    element35.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element35, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element35, bindings);
                }
                break;
            case 49: // Views\CreateChallengesPage.xaml line 1112
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element49 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    CreateChallengesPage_obj49_Bindings bindings = new CreateChallengesPage_obj49_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element49.DataContext);
                    element49.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element49, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element49, bindings);
                }
                break;
            case 54: // Views\CreateChallengesPage.xaml line 992
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element54 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj54_Bindings bindings = new CreateChallengesPage_obj54_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element54.DataContext);
                    element54.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element54, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element54, bindings);
                }
                break;
            case 68: // Views\CreateChallengesPage.xaml line 858
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element68 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj68_Bindings bindings = new CreateChallengesPage_obj68_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element68.DataContext);
                    element68.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element68, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element68, bindings);
                }
                break;
            case 81: // Views\CreateChallengesPage.xaml line 776
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element81 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    CreateChallengesPage_obj81_Bindings bindings = new CreateChallengesPage_obj81_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element81.DataContext);
                    element81.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element81, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element81, bindings);
                }
                break;
            case 86: // Views\CreateChallengesPage.xaml line 656
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element86 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj86_Bindings bindings = new CreateChallengesPage_obj86_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element86.DataContext);
                    element86.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element86, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element86, bindings);
                }
                break;
            case 103: // Views\CreateChallengesPage.xaml line 484
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element103 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj103_Bindings bindings = new CreateChallengesPage_obj103_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element103.DataContext);
                    element103.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element103, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element103, bindings);
                }
                break;
            case 116: // Views\CreateChallengesPage.xaml line 402
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element116 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    CreateChallengesPage_obj116_Bindings bindings = new CreateChallengesPage_obj116_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element116.DataContext);
                    element116.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element116, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element116, bindings);
                }
                break;
            case 121: // Views\CreateChallengesPage.xaml line 280
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element121 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj121_Bindings bindings = new CreateChallengesPage_obj121_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element121.DataContext);
                    element121.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element121, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element121, bindings);
                }
                break;
            case 135: // Views\CreateChallengesPage.xaml line 196
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element135 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    CreateChallengesPage_obj135_Bindings bindings = new CreateChallengesPage_obj135_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element135.DataContext);
                    element135.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element135, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element135, bindings);
                }
                break;
            case 140: // Views\CreateChallengesPage.xaml line 73
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element140 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj140_Bindings bindings = new CreateChallengesPage_obj140_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element140.DataContext);
                    element140.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element140, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element140, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

