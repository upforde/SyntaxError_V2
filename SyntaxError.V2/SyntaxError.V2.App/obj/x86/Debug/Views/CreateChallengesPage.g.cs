#pragma checksum "C:\Users\upfor\Desktop\Skole\DotNET\SyntaxError_V2\SyntaxError.V2\SyntaxError.V2.App\Views\CreateChallengesPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "75913C5398D474791E7C747FA0EDC67E"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SyntaxError.V2.App.Views
{
    partial class CreateChallengesPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Source = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj10_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.ChallengeObjects.Game dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj10;
            private global::Windows.UI.Xaml.Controls.TextBlock obj11;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj11TextDisabled = false;

            public CreateChallengesPage_obj10_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 1525 && columnNumber == 68)
                {
                    isobj11TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 10: // Views\CreateChallengesPage.xaml line 1524
                        this.obj10 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 11: // Views\CreateChallengesPage.xaml line 1525
                        this.obj11 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj10.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.ChallengeObjects.Game) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.ChallengeObjects.Game)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1525
                    if (!isobj11TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj11, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj14_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.SologameChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj14;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj15;
            private global::Windows.UI.Xaml.Controls.TextBlock obj16;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj15SourceDisabled = false;
            private static bool isobj16TextDisabled = false;

            public CreateChallengesPage_obj14_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 1407 && columnNumber == 59)
                {
                    isobj15SourceDisabled = true;
                }
                else if (lineNumber == 1413 && columnNumber == 49)
                {
                    isobj16TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 14: // Views\CreateChallengesPage.xaml line 1400
                        this.obj14 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 15: // Views\CreateChallengesPage.xaml line 1405
                        this.obj15 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 16: // Views\CreateChallengesPage.xaml line 1409
                        this.obj16 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj14.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.SologameChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.SologameChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.SologameChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game(obj.Game, phase);
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                    }
                }
            }
            private void Update_Game(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game_URI(obj.URI, phase);
                    }
                }
            }
            private void Update_Game_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1405
                    if (!isobj15SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj15, obj, null);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1409
                    if (!isobj16TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj16, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj27_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.ChallengeObjects.Image dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj27;
            private global::Windows.UI.Xaml.Controls.TextBlock obj28;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj28TextDisabled = false;

            public CreateChallengesPage_obj27_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 1317 && columnNumber == 68)
                {
                    isobj28TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 27: // Views\CreateChallengesPage.xaml line 1316
                        this.obj27 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 28: // Views\CreateChallengesPage.xaml line 1317
                        this.obj28 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj27.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.ChallengeObjects.Image) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.ChallengeObjects.Image)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.ChallengeObjects.Image obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1317
                    if (!isobj28TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj28, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj31_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj31;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj32;
            private global::Windows.UI.Xaml.Controls.TextBlock obj33;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj32SourceDisabled = false;
            private static bool isobj33TextDisabled = false;

            public CreateChallengesPage_obj31_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 1203 && columnNumber == 59)
                {
                    isobj32SourceDisabled = true;
                }
                else if (lineNumber == 1208 && columnNumber == 45)
                {
                    isobj33TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 31: // Views\CreateChallengesPage.xaml line 1196
                        this.obj31 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 32: // Views\CreateChallengesPage.xaml line 1201
                        this.obj32 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 33: // Views\CreateChallengesPage.xaml line 1204
                        this.obj33 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj31.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Image(obj.Image, phase);
                    }
                }
            }
            private void Update_Image(global::SyntaxError.V2.Modell.ChallengeObjects.Image obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Image_URI(obj.URI, phase);
                        this.Update_Image_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Image_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1201
                    if (!isobj32SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj32, obj, null);
                    }
                }
            }
            private void Update_Image_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1204
                    if (!isobj33TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj33, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj44_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.ChallengeObjects.Image dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj44;
            private global::Windows.UI.Xaml.Controls.TextBlock obj45;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj45TextDisabled = false;

            public CreateChallengesPage_obj44_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 1113 && columnNumber == 68)
                {
                    isobj45TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 44: // Views\CreateChallengesPage.xaml line 1112
                        this.obj44 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 45: // Views\CreateChallengesPage.xaml line 1113
                        this.obj45 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj44.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.ChallengeObjects.Image) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.ChallengeObjects.Image)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.ChallengeObjects.Image obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1113
                    if (!isobj45TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj45, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj48_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj48;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj49;
            private global::Windows.UI.Xaml.Controls.TextBlock obj50;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj49SourceDisabled = false;
            private static bool isobj50TextDisabled = false;

            public CreateChallengesPage_obj48_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 999 && columnNumber == 59)
                {
                    isobj49SourceDisabled = true;
                }
                else if (lineNumber == 1004 && columnNumber == 45)
                {
                    isobj50TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 48: // Views\CreateChallengesPage.xaml line 992
                        this.obj48 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 49: // Views\CreateChallengesPage.xaml line 997
                        this.obj49 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 50: // Views\CreateChallengesPage.xaml line 1000
                        this.obj50 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj48.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Image(obj.Image, phase);
                    }
                }
            }
            private void Update_Image(global::SyntaxError.V2.Modell.ChallengeObjects.Image obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Image_URI(obj.URI, phase);
                        this.Update_Image_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Image_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 997
                    if (!isobj49SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj49, obj, null);
                    }
                }
            }
            private void Update_Image_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1000
                    if (!isobj50TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj50, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj61_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.QuizChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj61;
            private global::Windows.UI.Xaml.Controls.TextBlock obj62;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj62TextDisabled = false;

            public CreateChallengesPage_obj61_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 859 && columnNumber == 61)
                {
                    isobj62TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 61: // Views\CreateChallengesPage.xaml line 858
                        this.obj61 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 62: // Views\CreateChallengesPage.xaml line 859
                        this.obj62 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj61.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.QuizChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.QuizChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.QuizChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 859
                    if (!isobj62TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj62, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj73_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.ChallengeObjects.Music dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj73;
            private global::Windows.UI.Xaml.Controls.TextBlock obj74;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj74TextDisabled = false;

            public CreateChallengesPage_obj73_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 777 && columnNumber == 68)
                {
                    isobj74TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 73: // Views\CreateChallengesPage.xaml line 776
                        this.obj73 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 74: // Views\CreateChallengesPage.xaml line 777
                        this.obj74 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj73.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.ChallengeObjects.Music) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.ChallengeObjects.Music)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.ChallengeObjects.Music obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 777
                    if (!isobj74TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj74, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj77_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.MusicChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj77;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj78;
            private global::Windows.UI.Xaml.Controls.TextBlock obj79;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj78SourceDisabled = false;
            private static bool isobj79TextDisabled = false;

            public CreateChallengesPage_obj77_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 663 && columnNumber == 59)
                {
                    isobj78SourceDisabled = true;
                }
                else if (lineNumber == 668 && columnNumber == 45)
                {
                    isobj79TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 77: // Views\CreateChallengesPage.xaml line 656
                        this.obj77 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 78: // Views\CreateChallengesPage.xaml line 661
                        this.obj78 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 79: // Views\CreateChallengesPage.xaml line 664
                        this.obj79 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj77.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.MusicChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.MusicChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.MusicChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Song(obj.Song, phase);
                    }
                }
            }
            private void Update_Song(global::SyntaxError.V2.Modell.ChallengeObjects.Music obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Song_URI(obj.URI, phase);
                        this.Update_Song_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Song_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 661
                    if (!isobj78SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj78, obj, null);
                    }
                }
            }
            private void Update_Song_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 664
                    if (!isobj79TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj79, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj93_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj93;
            private global::Windows.UI.Xaml.Controls.TextBlock obj94;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj94TextDisabled = false;

            public CreateChallengesPage_obj93_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 490 && columnNumber == 61)
                {
                    isobj94TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 93: // Views\CreateChallengesPage.xaml line 484
                        this.obj93 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 94: // Views\CreateChallengesPage.xaml line 490
                        this.obj94 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj93.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 490
                    if (!isobj94TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj94, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj105_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.ChallengeObjects.Game dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj105;
            private global::Windows.UI.Xaml.Controls.TextBlock obj106;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj106TextDisabled = false;

            public CreateChallengesPage_obj105_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 403 && columnNumber == 68)
                {
                    isobj106TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 105: // Views\CreateChallengesPage.xaml line 402
                        this.obj105 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 106: // Views\CreateChallengesPage.xaml line 403
                        this.obj106 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj105.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.ChallengeObjects.Game) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.ChallengeObjects.Game)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 403
                    if (!isobj106TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj106, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj109_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.CrewChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj109;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj110;
            private global::Windows.UI.Xaml.Controls.TextBlock obj111;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj110SourceDisabled = false;
            private static bool isobj111TextDisabled = false;

            public CreateChallengesPage_obj109_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 287 && columnNumber == 59)
                {
                    isobj110SourceDisabled = true;
                }
                else if (lineNumber == 293 && columnNumber == 49)
                {
                    isobj111TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 109: // Views\CreateChallengesPage.xaml line 280
                        this.obj109 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 110: // Views\CreateChallengesPage.xaml line 285
                        this.obj110 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 111: // Views\CreateChallengesPage.xaml line 289
                        this.obj111 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj109.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.CrewChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.CrewChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.CrewChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game(obj.Game, phase);
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                    }
                }
            }
            private void Update_Game(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game_URI(obj.URI, phase);
                    }
                }
            }
            private void Update_Game_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 285
                    if (!isobj110SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj110, obj, null);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 289
                    if (!isobj111TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj111, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj122_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.ChallengeObjects.Game dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj122;
            private global::Windows.UI.Xaml.Controls.TextBlock obj123;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj123TextDisabled = false;

            public CreateChallengesPage_obj122_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 197 && columnNumber == 68)
                {
                    isobj123TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 122: // Views\CreateChallengesPage.xaml line 196
                        this.obj122 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.StackPanel)target);
                        break;
                    case 123: // Views\CreateChallengesPage.xaml line 197
                        this.obj123 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj122.Target as global::Windows.UI.Xaml.Controls.StackPanel).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.ChallengeObjects.Game) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.ChallengeObjects.Game)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 197
                    if (!isobj123TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj123, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj126_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.AudienceChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj126;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj127;
            private global::Windows.UI.Xaml.Controls.TextBlock obj128;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj127SourceDisabled = false;
            private static bool isobj128TextDisabled = false;

            public CreateChallengesPage_obj126_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 80 && columnNumber == 59)
                {
                    isobj127SourceDisabled = true;
                }
                else if (lineNumber == 86 && columnNumber == 49)
                {
                    isobj128TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 126: // Views\CreateChallengesPage.xaml line 73
                        this.obj126 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 127: // Views\CreateChallengesPage.xaml line 78
                        this.obj127 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 128: // Views\CreateChallengesPage.xaml line 82
                        this.obj128 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj126.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.AudienceChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.AudienceChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.AudienceChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game(obj.Game, phase);
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                    }
                }
            }
            private void Update_Game(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game_URI(obj.URI, phase);
                    }
                }
            }
            private void Update_Game_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 78
                    if (!isobj127SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj127, obj, null);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 82
                    if (!isobj128TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj128, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.App.Views.CreateChallengesPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj4;
            private global::Windows.UI.Xaml.Controls.ComboBox obj9;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj21;
            private global::Windows.UI.Xaml.Controls.ComboBox obj26;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj38;
            private global::Windows.UI.Xaml.Controls.ComboBox obj43;
            private global::Windows.UI.Xaml.Controls.ListView obj55;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj67;
            private global::Windows.UI.Xaml.Controls.ComboBox obj72;
            private global::Windows.UI.Xaml.Controls.ListView obj84;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj99;
            private global::Windows.UI.Xaml.Controls.ComboBox obj104;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj116;
            private global::Windows.UI.Xaml.Controls.ComboBox obj121;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4ItemsSourceDisabled = false;
            private static bool isobj9ItemsSourceDisabled = false;
            private static bool isobj21ItemsSourceDisabled = false;
            private static bool isobj26ItemsSourceDisabled = false;
            private static bool isobj38ItemsSourceDisabled = false;
            private static bool isobj43ItemsSourceDisabled = false;
            private static bool isobj55ItemsSourceDisabled = false;
            private static bool isobj67ItemsSourceDisabled = false;
            private static bool isobj72ItemsSourceDisabled = false;
            private static bool isobj84ItemsSourceDisabled = false;
            private static bool isobj99ItemsSourceDisabled = false;
            private static bool isobj104ItemsSourceDisabled = false;
            private static bool isobj116ItemsSourceDisabled = false;
            private static bool isobj121ItemsSourceDisabled = false;

            public CreateChallengesPage_obj1_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 1389 && columnNumber == 48)
                {
                    isobj4ItemsSourceDisabled = true;
                }
                else if (lineNumber == 1519 && columnNumber == 80)
                {
                    isobj9ItemsSourceDisabled = true;
                }
                else if (lineNumber == 1185 && columnNumber == 48)
                {
                    isobj21ItemsSourceDisabled = true;
                }
                else if (lineNumber == 1311 && columnNumber == 80)
                {
                    isobj26ItemsSourceDisabled = true;
                }
                else if (lineNumber == 981 && columnNumber == 48)
                {
                    isobj38ItemsSourceDisabled = true;
                }
                else if (lineNumber == 1107 && columnNumber == 80)
                {
                    isobj43ItemsSourceDisabled = true;
                }
                else if (lineNumber == 849 && columnNumber == 31)
                {
                    isobj55ItemsSourceDisabled = true;
                }
                else if (lineNumber == 645 && columnNumber == 48)
                {
                    isobj67ItemsSourceDisabled = true;
                }
                else if (lineNumber == 771 && columnNumber == 80)
                {
                    isobj72ItemsSourceDisabled = true;
                }
                else if (lineNumber == 475 && columnNumber == 31)
                {
                    isobj84ItemsSourceDisabled = true;
                }
                else if (lineNumber == 269 && columnNumber == 48)
                {
                    isobj99ItemsSourceDisabled = true;
                }
                else if (lineNumber == 397 && columnNumber == 80)
                {
                    isobj104ItemsSourceDisabled = true;
                }
                else if (lineNumber == 62 && columnNumber == 48)
                {
                    isobj116ItemsSourceDisabled = true;
                }
                else if (lineNumber == 191 && columnNumber == 80)
                {
                    isobj121ItemsSourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 4: // Views\CreateChallengesPage.xaml line 1389
                        this.obj4 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 9: // Views\CreateChallengesPage.xaml line 1519
                        this.obj9 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    case 21: // Views\CreateChallengesPage.xaml line 1185
                        this.obj21 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 26: // Views\CreateChallengesPage.xaml line 1311
                        this.obj26 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    case 38: // Views\CreateChallengesPage.xaml line 981
                        this.obj38 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 43: // Views\CreateChallengesPage.xaml line 1107
                        this.obj43 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    case 55: // Views\CreateChallengesPage.xaml line 849
                        this.obj55 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 67: // Views\CreateChallengesPage.xaml line 645
                        this.obj67 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 72: // Views\CreateChallengesPage.xaml line 771
                        this.obj72 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    case 84: // Views\CreateChallengesPage.xaml line 475
                        this.obj84 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 99: // Views\CreateChallengesPage.xaml line 269
                        this.obj99 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 104: // Views\CreateChallengesPage.xaml line 397
                        this.obj104 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    case 116: // Views\CreateChallengesPage.xaml line 62
                        this.obj116 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 121: // Views\CreateChallengesPage.xaml line 191
                        this.obj121 = (global::Windows.UI.Xaml.Controls.ComboBox)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                throw new global::System.NotImplementedException();
            }

            public void Recycle()
            {
                throw new global::System.NotImplementedException();
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.App.Views.CreateChallengesPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.App.Views.CreateChallengesPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::SyntaxError.V2.App.ViewModels.CreateChallengesViewModel obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_FilteredSolo(obj.FilteredSolo, phase);
                        this.Update_ViewModel_Games(obj.Games, phase);
                        this.Update_ViewModel_FilteredSilhu(obj.FilteredSilhu, phase);
                        this.Update_ViewModel_Images(obj.Images, phase);
                        this.Update_ViewModel_FilteredScreen(obj.FilteredScreen, phase);
                        this.Update_ViewModel_FilteredQuiz(obj.FilteredQuiz, phase);
                        this.Update_ViewModel_FilteredMusic(obj.FilteredMusic, phase);
                        this.Update_ViewModel_Music(obj.Music, phase);
                        this.Update_ViewModel_FilteredMulti(obj.FilteredMulti, phase);
                        this.Update_ViewModel_FilteredCrew(obj.FilteredCrew, phase);
                        this.Update_ViewModel_FilteredAudience(obj.FilteredAudience, phase);
                    }
                }
            }
            private void Update_ViewModel_FilteredSolo(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.SologameChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1389
                    if (!isobj4ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj4, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Games(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.ChallengeObjects.Game> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1519
                    if (!isobj9ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj9, obj, null);
                    }
                    // Views\CreateChallengesPage.xaml line 397
                    if (!isobj104ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj104, obj, null);
                    }
                    // Views\CreateChallengesPage.xaml line 191
                    if (!isobj121ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj121, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredSilhu(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1185
                    if (!isobj21ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj21, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Images(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.ChallengeObjects.Image> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1311
                    if (!isobj26ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj26, obj, null);
                    }
                    // Views\CreateChallengesPage.xaml line 1107
                    if (!isobj43ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj43, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredScreen(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 981
                    if (!isobj38ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj38, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredQuiz(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.QuizChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 849
                    if (!isobj55ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj55, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredMusic(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.MusicChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 645
                    if (!isobj67ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj67, obj, null);
                    }
                }
            }
            private void Update_ViewModel_Music(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.ChallengeObjects.Music> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 771
                    if (!isobj72ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj72, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredMulti(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 475
                    if (!isobj84ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj84, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredCrew(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.CrewChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 269
                    if (!isobj99ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj99, obj, null);
                    }
                }
            }
            private void Update_ViewModel_FilteredAudience(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.AudienceChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 62
                    if (!isobj116ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj116, obj, null);
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\CreateChallengesPage.xaml line 14
                {
                    this.ContentArea = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 3: // Views\CreateChallengesPage.xaml line 17
                {
                    this.ChallengeList = (global::Windows.UI.Xaml.Controls.Pivot)(target);
                    ((global::Windows.UI.Xaml.Controls.Pivot)this.ChallengeList).SelectionChanged += this.ChallengeList_SelectionChanged;
                }
                break;
            case 4: // Views\CreateChallengesPage.xaml line 1389
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element4 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element4).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 5: // Views\CreateChallengesPage.xaml line 1548
                {
                    this.EmptySologameChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 6: // Views\CreateChallengesPage.xaml line 1539
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element6 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element6).Click += this.SaveButton_Click;
                }
                break;
            case 7: // Views\CreateChallengesPage.xaml line 1542
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element7 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element7).Click += this.BackButton_Click;
                }
                break;
            case 8: // Views\CreateChallengesPage.xaml line 1448
                {
                    global::Windows.UI.Xaml.Controls.Button element8 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element8).Click += this.BackButton_Click;
                }
                break;
            case 9: // Views\CreateChallengesPage.xaml line 1519
                {
                    global::Windows.UI.Xaml.Controls.ComboBox element9 = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)element9).SelectionChanged += this.ComboBox_SelectionChanged;
                }
                break;
            case 12: // Views\CreateChallengesPage.xaml line 1486
                {
                    global::Windows.UI.Xaml.Controls.Grid element12 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element12).Tapped += this.StackPanel_Tapped;
                }
                break;
            case 13: // Views\CreateChallengesPage.xaml line 1503
                {
                    global::Windows.UI.Xaml.Controls.Button element13 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element13).Click += this.BackButton_Click;
                }
                break;
            case 17: // Views\CreateChallengesPage.xaml line 1383
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element17 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element17).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 18: // Views\CreateChallengesPage.xaml line 1364
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element18 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element18).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element18).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 19: // Views\CreateChallengesPage.xaml line 1371
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element19 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element19).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 20: // Views\CreateChallengesPage.xaml line 1378
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element20 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element20).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 21: // Views\CreateChallengesPage.xaml line 1185
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element21 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element21).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 22: // Views\CreateChallengesPage.xaml line 1340
                {
                    this.EmptySilhouetteChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 23: // Views\CreateChallengesPage.xaml line 1331
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element23 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element23).Click += this.SaveButton_Click;
                }
                break;
            case 24: // Views\CreateChallengesPage.xaml line 1334
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element24 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element24).Click += this.BackButton_Click;
                }
                break;
            case 25: // Views\CreateChallengesPage.xaml line 1241
                {
                    global::Windows.UI.Xaml.Controls.Button element25 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element25).Click += this.BackButton_Click;
                }
                break;
            case 26: // Views\CreateChallengesPage.xaml line 1311
                {
                    global::Windows.UI.Xaml.Controls.ComboBox element26 = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)element26).SelectionChanged += this.ComboBox_SelectionChanged;
                }
                break;
            case 29: // Views\CreateChallengesPage.xaml line 1279
                {
                    global::Windows.UI.Xaml.Controls.Grid element29 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element29).Tapped += this.StackPanel_Tapped;
                }
                break;
            case 30: // Views\CreateChallengesPage.xaml line 1296
                {
                    global::Windows.UI.Xaml.Controls.Button element30 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element30).Click += this.BackButton_Click;
                }
                break;
            case 34: // Views\CreateChallengesPage.xaml line 1179
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element34 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element34).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 35: // Views\CreateChallengesPage.xaml line 1160
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element35 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element35).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element35).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 36: // Views\CreateChallengesPage.xaml line 1167
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element36 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element36).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 37: // Views\CreateChallengesPage.xaml line 1174
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element37 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element37).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 38: // Views\CreateChallengesPage.xaml line 981
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element38 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element38).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 39: // Views\CreateChallengesPage.xaml line 1136
                {
                    this.EmptyScreenshotChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 40: // Views\CreateChallengesPage.xaml line 1127
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element40 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element40).Click += this.SaveButton_Click;
                }
                break;
            case 41: // Views\CreateChallengesPage.xaml line 1130
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element41 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element41).Click += this.BackButton_Click;
                }
                break;
            case 42: // Views\CreateChallengesPage.xaml line 1037
                {
                    global::Windows.UI.Xaml.Controls.Button element42 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element42).Click += this.BackButton_Click;
                }
                break;
            case 43: // Views\CreateChallengesPage.xaml line 1107
                {
                    global::Windows.UI.Xaml.Controls.ComboBox element43 = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)element43).SelectionChanged += this.ComboBox_SelectionChanged;
                }
                break;
            case 46: // Views\CreateChallengesPage.xaml line 1075
                {
                    global::Windows.UI.Xaml.Controls.Grid element46 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element46).Tapped += this.StackPanel_Tapped;
                }
                break;
            case 47: // Views\CreateChallengesPage.xaml line 1092
                {
                    global::Windows.UI.Xaml.Controls.Button element47 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element47).Click += this.BackButton_Click;
                }
                break;
            case 51: // Views\CreateChallengesPage.xaml line 975
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element51 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element51).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 52: // Views\CreateChallengesPage.xaml line 956
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element52 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element52).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element52).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 53: // Views\CreateChallengesPage.xaml line 963
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element53 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element53).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 54: // Views\CreateChallengesPage.xaml line 970
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element54 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element54).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 55: // Views\CreateChallengesPage.xaml line 849
                {
                    this.QuizChallengeList = (global::Windows.UI.Xaml.Controls.ListView)(target);
                    ((global::Windows.UI.Xaml.Controls.ListView)this.QuizChallengeList).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 56: // Views\CreateChallengesPage.xaml line 932
                {
                    this.EmptyQuizChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 57: // Views\CreateChallengesPage.xaml line 923
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element57 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element57).Click += this.SaveButton_Click;
                }
                break;
            case 58: // Views\CreateChallengesPage.xaml line 926
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element58 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element58).Click += this.BackButton_Click;
                }
                break;
            case 59: // Views\CreateChallengesPage.xaml line 893
                {
                    global::Windows.UI.Xaml.Controls.Button element59 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element59).Click += this.BackButton_Click;
                }
                break;
            case 60: // Views\CreateChallengesPage.xaml line 913
                {
                    this.QuizAnswer = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 63: // Views\CreateChallengesPage.xaml line 843
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element63 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element63).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 64: // Views\CreateChallengesPage.xaml line 824
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element64 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element64).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element64).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 65: // Views\CreateChallengesPage.xaml line 831
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element65 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element65).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 66: // Views\CreateChallengesPage.xaml line 838
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element66 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element66).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 67: // Views\CreateChallengesPage.xaml line 645
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element67 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element67).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 68: // Views\CreateChallengesPage.xaml line 800
                {
                    this.EmptyMusicChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 69: // Views\CreateChallengesPage.xaml line 791
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element69 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element69).Click += this.SaveButton_Click;
                }
                break;
            case 70: // Views\CreateChallengesPage.xaml line 794
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element70 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element70).Click += this.BackButton_Click;
                }
                break;
            case 71: // Views\CreateChallengesPage.xaml line 701
                {
                    global::Windows.UI.Xaml.Controls.Button element71 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element71).Click += this.BackButton_Click;
                }
                break;
            case 72: // Views\CreateChallengesPage.xaml line 771
                {
                    global::Windows.UI.Xaml.Controls.ComboBox element72 = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)element72).SelectionChanged += this.ComboBox_SelectionChanged;
                }
                break;
            case 75: // Views\CreateChallengesPage.xaml line 739
                {
                    global::Windows.UI.Xaml.Controls.Grid element75 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element75).Tapped += this.StackPanel_Tapped;
                }
                break;
            case 76: // Views\CreateChallengesPage.xaml line 756
                {
                    global::Windows.UI.Xaml.Controls.Button element76 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element76).Click += this.BackButton_Click;
                }
                break;
            case 80: // Views\CreateChallengesPage.xaml line 639
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element80 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element80).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 81: // Views\CreateChallengesPage.xaml line 620
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element81 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element81).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element81).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 82: // Views\CreateChallengesPage.xaml line 627
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element82 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element82).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 83: // Views\CreateChallengesPage.xaml line 634
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element83 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element83).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 84: // Views\CreateChallengesPage.xaml line 475
                {
                    this.MultipleChoiceChallengeList = (global::Windows.UI.Xaml.Controls.ListView)(target);
                    ((global::Windows.UI.Xaml.Controls.ListView)this.MultipleChoiceChallengeList).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 85: // Views\CreateChallengesPage.xaml line 596
                {
                    this.EmptyMultipleChoiceChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 86: // Views\CreateChallengesPage.xaml line 587
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element86 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element86).Click += this.SaveButton_Click;
                }
                break;
            case 87: // Views\CreateChallengesPage.xaml line 590
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element87 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element87).Click += this.BackButton_Click;
                }
                break;
            case 88: // Views\CreateChallengesPage.xaml line 524
                {
                    global::Windows.UI.Xaml.Controls.Button element88 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element88).Click += this.BackButton_Click;
                }
                break;
            case 89: // Views\CreateChallengesPage.xaml line 578
                {
                    this.MultipleChoiceDummy3 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 90: // Views\CreateChallengesPage.xaml line 570
                {
                    this.MultipleChoiceDummy2 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 91: // Views\CreateChallengesPage.xaml line 562
                {
                    this.MultipleChoiceDummy1 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 92: // Views\CreateChallengesPage.xaml line 554
                {
                    this.MultipleChoiceAnswer = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 95: // Views\CreateChallengesPage.xaml line 469
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element95 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element95).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 96: // Views\CreateChallengesPage.xaml line 450
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element96 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element96).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element96).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 97: // Views\CreateChallengesPage.xaml line 457
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element97 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element97).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 98: // Views\CreateChallengesPage.xaml line 464
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element98 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element98).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 99: // Views\CreateChallengesPage.xaml line 269
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element99 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element99).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 100: // Views\CreateChallengesPage.xaml line 426
                {
                    this.EmptyCrewChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 101: // Views\CreateChallengesPage.xaml line 417
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element101 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element101).Click += this.SaveButton_Click;
                }
                break;
            case 102: // Views\CreateChallengesPage.xaml line 420
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element102 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element102).Click += this.BackButton_Click;
                }
                break;
            case 103: // Views\CreateChallengesPage.xaml line 328
                {
                    global::Windows.UI.Xaml.Controls.Button element103 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element103).Click += this.BackButton_Click;
                }
                break;
            case 104: // Views\CreateChallengesPage.xaml line 397
                {
                    global::Windows.UI.Xaml.Controls.ComboBox element104 = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)element104).SelectionChanged += this.ComboBox_SelectionChanged;
                }
                break;
            case 107: // Views\CreateChallengesPage.xaml line 365
                {
                    global::Windows.UI.Xaml.Controls.Grid element107 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element107).Tapped += this.StackPanel_Tapped;
                }
                break;
            case 108: // Views\CreateChallengesPage.xaml line 382
                {
                    global::Windows.UI.Xaml.Controls.Button element108 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element108).Click += this.BackButton_Click;
                }
                break;
            case 112: // Views\CreateChallengesPage.xaml line 263
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element112 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element112).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 113: // Views\CreateChallengesPage.xaml line 244
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element113 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element113).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element113).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 114: // Views\CreateChallengesPage.xaml line 251
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element114 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element114).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 115: // Views\CreateChallengesPage.xaml line 258
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element115 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element115).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 116: // Views\CreateChallengesPage.xaml line 62
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element116 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element116).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 117: // Views\CreateChallengesPage.xaml line 220
                {
                    this.EmptyAudienceChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 118: // Views\CreateChallengesPage.xaml line 211
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element118 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element118).Click += this.SaveButton_Click;
                }
                break;
            case 119: // Views\CreateChallengesPage.xaml line 214
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element119 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element119).Click += this.BackButton_Click;
                }
                break;
            case 120: // Views\CreateChallengesPage.xaml line 121
                {
                    global::Windows.UI.Xaml.Controls.Button element120 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element120).Click += this.BackButton_Click;
                }
                break;
            case 121: // Views\CreateChallengesPage.xaml line 191
                {
                    global::Windows.UI.Xaml.Controls.ComboBox element121 = (global::Windows.UI.Xaml.Controls.ComboBox)(target);
                    ((global::Windows.UI.Xaml.Controls.ComboBox)element121).SelectionChanged += this.ComboBox_SelectionChanged;
                }
                break;
            case 124: // Views\CreateChallengesPage.xaml line 159
                {
                    global::Windows.UI.Xaml.Controls.Grid element124 = (global::Windows.UI.Xaml.Controls.Grid)(target);
                    ((global::Windows.UI.Xaml.Controls.Grid)element124).Tapped += this.StackPanel_Tapped;
                }
                break;
            case 125: // Views\CreateChallengesPage.xaml line 176
                {
                    global::Windows.UI.Xaml.Controls.Button element125 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element125).Click += this.BackButton_Click;
                }
                break;
            case 129: // Views\CreateChallengesPage.xaml line 56
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element129 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element129).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 130: // Views\CreateChallengesPage.xaml line 37
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element130 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element130).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element130).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 131: // Views\CreateChallengesPage.xaml line 44
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element131 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element131).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 132: // Views\CreateChallengesPage.xaml line 51
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element132 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element132).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\CreateChallengesPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    CreateChallengesPage_obj1_Bindings bindings = new CreateChallengesPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 10: // Views\CreateChallengesPage.xaml line 1524
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element10 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    CreateChallengesPage_obj10_Bindings bindings = new CreateChallengesPage_obj10_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element10.DataContext);
                    element10.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element10, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element10, bindings);
                }
                break;
            case 14: // Views\CreateChallengesPage.xaml line 1400
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element14 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj14_Bindings bindings = new CreateChallengesPage_obj14_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element14.DataContext);
                    element14.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element14, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element14, bindings);
                }
                break;
            case 27: // Views\CreateChallengesPage.xaml line 1316
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element27 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    CreateChallengesPage_obj27_Bindings bindings = new CreateChallengesPage_obj27_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element27.DataContext);
                    element27.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element27, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element27, bindings);
                }
                break;
            case 31: // Views\CreateChallengesPage.xaml line 1196
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element31 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj31_Bindings bindings = new CreateChallengesPage_obj31_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element31.DataContext);
                    element31.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element31, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element31, bindings);
                }
                break;
            case 44: // Views\CreateChallengesPage.xaml line 1112
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element44 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    CreateChallengesPage_obj44_Bindings bindings = new CreateChallengesPage_obj44_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element44.DataContext);
                    element44.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element44, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element44, bindings);
                }
                break;
            case 48: // Views\CreateChallengesPage.xaml line 992
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element48 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj48_Bindings bindings = new CreateChallengesPage_obj48_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element48.DataContext);
                    element48.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element48, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element48, bindings);
                }
                break;
            case 61: // Views\CreateChallengesPage.xaml line 858
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element61 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj61_Bindings bindings = new CreateChallengesPage_obj61_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element61.DataContext);
                    element61.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element61, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element61, bindings);
                }
                break;
            case 73: // Views\CreateChallengesPage.xaml line 776
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element73 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    CreateChallengesPage_obj73_Bindings bindings = new CreateChallengesPage_obj73_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element73.DataContext);
                    element73.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element73, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element73, bindings);
                }
                break;
            case 77: // Views\CreateChallengesPage.xaml line 656
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element77 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj77_Bindings bindings = new CreateChallengesPage_obj77_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element77.DataContext);
                    element77.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element77, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element77, bindings);
                }
                break;
            case 93: // Views\CreateChallengesPage.xaml line 484
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element93 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj93_Bindings bindings = new CreateChallengesPage_obj93_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element93.DataContext);
                    element93.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element93, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element93, bindings);
                }
                break;
            case 105: // Views\CreateChallengesPage.xaml line 402
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element105 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    CreateChallengesPage_obj105_Bindings bindings = new CreateChallengesPage_obj105_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element105.DataContext);
                    element105.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element105, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element105, bindings);
                }
                break;
            case 109: // Views\CreateChallengesPage.xaml line 280
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element109 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj109_Bindings bindings = new CreateChallengesPage_obj109_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element109.DataContext);
                    element109.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element109, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element109, bindings);
                }
                break;
            case 122: // Views\CreateChallengesPage.xaml line 196
                {                    
                    global::Windows.UI.Xaml.Controls.StackPanel element122 = (global::Windows.UI.Xaml.Controls.StackPanel)target;
                    CreateChallengesPage_obj122_Bindings bindings = new CreateChallengesPage_obj122_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element122.DataContext);
                    element122.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element122, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element122, bindings);
                }
                break;
            case 126: // Views\CreateChallengesPage.xaml line 73
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element126 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj126_Bindings bindings = new CreateChallengesPage_obj126_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element126.DataContext);
                    element126.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element126, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element126, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

