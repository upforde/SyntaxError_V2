#pragma checksum "C:\Users\upfor\Desktop\Skole\DotNET\SyntaxError_V2\SyntaxError.V2\SyntaxError.V2.App\Views\CreateChallengesPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "EE7FFA5C6F6C920AE10259F371C40EDC"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SyntaxError.V2.App.Views
{
    partial class CreateChallengesPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj6_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.SologameChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj6;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj7;
            private global::Windows.UI.Xaml.Controls.TextBlock obj8;
            private global::Windows.UI.Xaml.Controls.TextBlock obj9;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj7SourceDisabled = false;
            private static bool isobj8TextDisabled = false;
            private static bool isobj9TextDisabled = false;

            public CreateChallengesPage_obj6_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 650 && columnNumber == 59)
                {
                    isobj7SourceDisabled = true;
                }
                else if (lineNumber == 656 && columnNumber == 49)
                {
                    isobj8TextDisabled = true;
                }
                else if (lineNumber == 662 && columnNumber == 49)
                {
                    isobj9TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 6: // Views\CreateChallengesPage.xaml line 643
                        this.obj6 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 7: // Views\CreateChallengesPage.xaml line 648
                        this.obj7 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 8: // Views\CreateChallengesPage.xaml line 652
                        this.obj8 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 9: // Views\CreateChallengesPage.xaml line 658
                        this.obj9 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj6.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.SologameChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.SologameChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.SologameChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game(obj.Game, phase);
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                    }
                }
            }
            private void Update_Game(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game_URI(obj.URI, phase);
                        this.Update_Game_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Game_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 648
                    if (!isobj7SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj7, obj, null);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 652
                    if (!isobj8TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj8, obj, null);
                    }
                }
            }
            private void Update_Game_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 658
                    if (!isobj9TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj9, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj16_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj16;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj17;
            private global::Windows.UI.Xaml.Controls.TextBlock obj18;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj17SourceDisabled = false;
            private static bool isobj18TextDisabled = false;

            public CreateChallengesPage_obj16_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 571 && columnNumber == 59)
                {
                    isobj17SourceDisabled = true;
                }
                else if (lineNumber == 576 && columnNumber == 45)
                {
                    isobj18TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 16: // Views\CreateChallengesPage.xaml line 564
                        this.obj16 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 17: // Views\CreateChallengesPage.xaml line 569
                        this.obj17 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 18: // Views\CreateChallengesPage.xaml line 572
                        this.obj18 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj16.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Image(obj.Image, phase);
                    }
                }
            }
            private void Update_Image(global::SyntaxError.V2.Modell.ChallengeObjects.Image obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Image_URI(obj.URI, phase);
                        this.Update_Image_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Image_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 569
                    if (!isobj17SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj17, obj, null);
                    }
                }
            }
            private void Update_Image_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 572
                    if (!isobj18TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj18, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj25_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj25;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj26;
            private global::Windows.UI.Xaml.Controls.TextBlock obj27;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj26SourceDisabled = false;
            private static bool isobj27TextDisabled = false;

            public CreateChallengesPage_obj25_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 492 && columnNumber == 59)
                {
                    isobj26SourceDisabled = true;
                }
                else if (lineNumber == 497 && columnNumber == 45)
                {
                    isobj27TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 25: // Views\CreateChallengesPage.xaml line 485
                        this.obj25 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 26: // Views\CreateChallengesPage.xaml line 490
                        this.obj26 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 27: // Views\CreateChallengesPage.xaml line 493
                        this.obj27 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj25.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Image(obj.Image, phase);
                    }
                }
            }
            private void Update_Image(global::SyntaxError.V2.Modell.ChallengeObjects.Image obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Image_URI(obj.URI, phase);
                        this.Update_Image_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Image_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 490
                    if (!isobj26SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj26, obj, null);
                    }
                }
            }
            private void Update_Image_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 493
                    if (!isobj27TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj27, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj34_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.QuizChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj34;
            private global::Windows.UI.Xaml.Controls.TextBlock obj35;
            private global::Windows.UI.Xaml.Controls.TextBlock obj36;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj35TextDisabled = false;
            private static bool isobj36TextDisabled = false;

            public CreateChallengesPage_obj34_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 412 && columnNumber == 57)
                {
                    isobj35TextDisabled = true;
                }
                else if (lineNumber == 416 && columnNumber == 57)
                {
                    isobj36TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 34: // Views\CreateChallengesPage.xaml line 406
                        this.obj34 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 35: // Views\CreateChallengesPage.xaml line 412
                        this.obj35 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 36: // Views\CreateChallengesPage.xaml line 416
                        this.obj36 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj34.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.QuizChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.QuizChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.QuizChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                        this.Update_Answers(obj.Answers, phase);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 412
                    if (!isobj35TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj35, obj, null);
                    }
                }
            }
            private void Update_Answers(global::SyntaxError.V2.Modell.ChallengeObjects.Answers obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Answers_Answer(obj.Answer, phase);
                    }
                }
            }
            private void Update_Answers_Answer(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 416
                    if (!isobj36TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj36, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj43_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.MusicChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj43;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj44;
            private global::Windows.UI.Xaml.Controls.TextBlock obj45;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj44SourceDisabled = false;
            private static bool isobj45TextDisabled = false;

            public CreateChallengesPage_obj43_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 335 && columnNumber == 59)
                {
                    isobj44SourceDisabled = true;
                }
                else if (lineNumber == 340 && columnNumber == 45)
                {
                    isobj45TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 43: // Views\CreateChallengesPage.xaml line 328
                        this.obj43 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 44: // Views\CreateChallengesPage.xaml line 333
                        this.obj44 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 45: // Views\CreateChallengesPage.xaml line 336
                        this.obj45 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj43.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.MusicChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.MusicChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.MusicChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Song(obj.Song, phase);
                    }
                }
            }
            private void Update_Song(global::SyntaxError.V2.Modell.ChallengeObjects.Music obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Song_URI(obj.URI, phase);
                        this.Update_Song_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Song_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 333
                    if (!isobj44SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj44, obj, null);
                    }
                }
            }
            private void Update_Song_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 336
                    if (!isobj45TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj45, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj52_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj52;
            private global::Windows.UI.Xaml.Controls.TextBlock obj53;
            private global::Windows.UI.Xaml.Controls.TextBlock obj54;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj53TextDisabled = false;
            private static bool isobj54TextDisabled = false;

            public CreateChallengesPage_obj52_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 255 && columnNumber == 57)
                {
                    isobj53TextDisabled = true;
                }
                else if (lineNumber == 259 && columnNumber == 57)
                {
                    isobj54TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 52: // Views\CreateChallengesPage.xaml line 249
                        this.obj52 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 53: // Views\CreateChallengesPage.xaml line 255
                        this.obj53 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 54: // Views\CreateChallengesPage.xaml line 259
                        this.obj54 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj52.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                        this.Update_Answers(obj.Answers, phase);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 255
                    if (!isobj53TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj53, obj, null);
                    }
                }
            }
            private void Update_Answers(global::SyntaxError.V2.Modell.ChallengeObjects.Answers obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Answers_Answer(obj.Answer, phase);
                    }
                }
            }
            private void Update_Answers_Answer(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 259
                    if (!isobj54TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj54, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj61_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.CrewChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj61;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj62;
            private global::Windows.UI.Xaml.Controls.TextBlock obj63;
            private global::Windows.UI.Xaml.Controls.TextBlock obj64;
            private global::Windows.UI.Xaml.Controls.TextBlock obj65;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj62SourceDisabled = false;
            private static bool isobj63TextDisabled = false;
            private static bool isobj64TextDisabled = false;
            private static bool isobj65TextDisabled = false;

            public CreateChallengesPage_obj61_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 164 && columnNumber == 59)
                {
                    isobj62SourceDisabled = true;
                }
                else if (lineNumber == 170 && columnNumber == 49)
                {
                    isobj63TextDisabled = true;
                }
                else if (lineNumber == 176 && columnNumber == 49)
                {
                    isobj64TextDisabled = true;
                }
                else if (lineNumber == 182 && columnNumber == 49)
                {
                    isobj65TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 61: // Views\CreateChallengesPage.xaml line 157
                        this.obj61 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 62: // Views\CreateChallengesPage.xaml line 162
                        this.obj62 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 63: // Views\CreateChallengesPage.xaml line 166
                        this.obj63 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 64: // Views\CreateChallengesPage.xaml line 172
                        this.obj64 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 65: // Views\CreateChallengesPage.xaml line 178
                        this.obj65 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj61.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.CrewChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.CrewChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.CrewChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game(obj.Game, phase);
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                        this.Update_CrewMember(obj.CrewMember, phase);
                    }
                }
            }
            private void Update_Game(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game_URI(obj.URI, phase);
                        this.Update_Game_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Game_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 162
                    if (!isobj62SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj62, obj, null);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 166
                    if (!isobj63TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj63, obj, null);
                    }
                }
            }
            private void Update_Game_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 172
                    if (!isobj64TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj64, obj, null);
                    }
                }
            }
            private void Update_CrewMember(global::SyntaxError.V2.Modell.ChallengeObjects.CrewMember obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_CrewMember_CrewTag(obj.CrewTag, phase);
                    }
                }
            }
            private void Update_CrewMember_CrewTag(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 178
                    if (!isobj65TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj65, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj72_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.AudienceChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj72;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj73;
            private global::Windows.UI.Xaml.Controls.TextBlock obj74;
            private global::Windows.UI.Xaml.Controls.TextBlock obj75;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj73SourceDisabled = false;
            private static bool isobj74TextDisabled = false;
            private static bool isobj75TextDisabled = false;

            public CreateChallengesPage_obj72_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 77 && columnNumber == 59)
                {
                    isobj73SourceDisabled = true;
                }
                else if (lineNumber == 83 && columnNumber == 49)
                {
                    isobj74TextDisabled = true;
                }
                else if (lineNumber == 89 && columnNumber == 49)
                {
                    isobj75TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 72: // Views\CreateChallengesPage.xaml line 70
                        this.obj72 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 73: // Views\CreateChallengesPage.xaml line 75
                        this.obj73 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 74: // Views\CreateChallengesPage.xaml line 79
                        this.obj74 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 75: // Views\CreateChallengesPage.xaml line 85
                        this.obj75 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj72.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.AudienceChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.AudienceChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.AudienceChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game(obj.Game, phase);
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                    }
                }
            }
            private void Update_Game(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game_URI(obj.URI, phase);
                        this.Update_Game_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Game_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 75
                    if (!isobj73SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj73, obj, null);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 79
                    if (!isobj74TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj74, obj, null);
                    }
                }
            }
            private void Update_Game_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 85
                    if (!isobj75TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj75, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.App.Views.CreateChallengesPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj4;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj14;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj23;
            private global::Windows.UI.Xaml.Controls.ListView obj32;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj41;
            private global::Windows.UI.Xaml.Controls.ListView obj50;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj59;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj70;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4ItemsSourceDisabled = false;
            private static bool isobj14ItemsSourceDisabled = false;
            private static bool isobj23ItemsSourceDisabled = false;
            private static bool isobj32ItemsSourceDisabled = false;
            private static bool isobj41ItemsSourceDisabled = false;
            private static bool isobj50ItemsSourceDisabled = false;
            private static bool isobj59ItemsSourceDisabled = false;
            private static bool isobj70ItemsSourceDisabled = false;

            public CreateChallengesPage_obj1_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 633 && columnNumber == 48)
                {
                    isobj4ItemsSourceDisabled = true;
                }
                else if (lineNumber == 554 && columnNumber == 48)
                {
                    isobj14ItemsSourceDisabled = true;
                }
                else if (lineNumber == 475 && columnNumber == 48)
                {
                    isobj23ItemsSourceDisabled = true;
                }
                else if (lineNumber == 399 && columnNumber == 31)
                {
                    isobj32ItemsSourceDisabled = true;
                }
                else if (lineNumber == 318 && columnNumber == 48)
                {
                    isobj41ItemsSourceDisabled = true;
                }
                else if (lineNumber == 242 && columnNumber == 31)
                {
                    isobj50ItemsSourceDisabled = true;
                }
                else if (lineNumber == 147 && columnNumber == 48)
                {
                    isobj59ItemsSourceDisabled = true;
                }
                else if (lineNumber == 60 && columnNumber == 48)
                {
                    isobj70ItemsSourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 4: // Views\CreateChallengesPage.xaml line 633
                        this.obj4 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 14: // Views\CreateChallengesPage.xaml line 554
                        this.obj14 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 23: // Views\CreateChallengesPage.xaml line 475
                        this.obj23 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 32: // Views\CreateChallengesPage.xaml line 397
                        this.obj32 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 41: // Views\CreateChallengesPage.xaml line 318
                        this.obj41 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 50: // Views\CreateChallengesPage.xaml line 240
                        this.obj50 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 59: // Views\CreateChallengesPage.xaml line 147
                        this.obj59 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 70: // Views\CreateChallengesPage.xaml line 60
                        this.obj70 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                throw new global::System.NotImplementedException();
            }

            public void Recycle()
            {
                throw new global::System.NotImplementedException();
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.App.Views.CreateChallengesPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.App.Views.CreateChallengesPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::SyntaxError.V2.App.ViewModels.CreateChallengesViewModel obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SologameChallenges(obj.SologameChallenges, phase);
                        this.Update_ViewModel_SilhouetteChallenges(obj.SilhouetteChallenges, phase);
                        this.Update_ViewModel_ScreenshotChallenges(obj.ScreenshotChallenges, phase);
                        this.Update_ViewModel_QuizChallenges(obj.QuizChallenges, phase);
                        this.Update_ViewModel_MusicChallenges(obj.MusicChallenges, phase);
                        this.Update_ViewModel_MultipleChoiceChallenges(obj.MultipleChoiceChallenges, phase);
                        this.Update_ViewModel_CrewChallenges(obj.CrewChallenges, phase);
                        this.Update_ViewModel_AudienceChallenges(obj.AudienceChallenges, phase);
                    }
                }
            }
            private void Update_ViewModel_SologameChallenges(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.SologameChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 633
                    if (!isobj4ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj4, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SilhouetteChallenges(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 554
                    if (!isobj14ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj14, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ScreenshotChallenges(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 475
                    if (!isobj23ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj23, obj, null);
                    }
                }
            }
            private void Update_ViewModel_QuizChallenges(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.QuizChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 397
                    if (!isobj32ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj32, obj, null);
                    }
                }
            }
            private void Update_ViewModel_MusicChallenges(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.MusicChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 318
                    if (!isobj41ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj41, obj, null);
                    }
                }
            }
            private void Update_ViewModel_MultipleChoiceChallenges(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 240
                    if (!isobj50ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj50, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CrewChallenges(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.CrewChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 147
                    if (!isobj59ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj59, obj, null);
                    }
                }
            }
            private void Update_ViewModel_AudienceChallenges(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.AudienceChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 60
                    if (!isobj70ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj70, obj, null);
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\CreateChallengesPage.xaml line 13
                {
                    this.ContentArea = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 3: // Views\CreateChallengesPage.xaml line 16
                {
                    this.ChallengeList = (global::Windows.UI.Xaml.Controls.Pivot)(target);
                }
                break;
            case 5: // Views\CreateChallengesPage.xaml line 670
                {
                    this.EmptySologameChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 10: // Views\CreateChallengesPage.xaml line 627
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element10 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element10).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 11: // Views\CreateChallengesPage.xaml line 607
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element11 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element11).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element11).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 12: // Views\CreateChallengesPage.xaml line 614
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element12 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element12).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 13: // Views\CreateChallengesPage.xaml line 621
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element13 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element13).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 15: // Views\CreateChallengesPage.xaml line 583
                {
                    this.EmptySilhouetteChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 19: // Views\CreateChallengesPage.xaml line 548
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element19 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element19).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 20: // Views\CreateChallengesPage.xaml line 528
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element20 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element20).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element20).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 21: // Views\CreateChallengesPage.xaml line 535
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element21 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element21).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 22: // Views\CreateChallengesPage.xaml line 542
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element22 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element22).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 24: // Views\CreateChallengesPage.xaml line 504
                {
                    this.EmptyScreenshotChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 28: // Views\CreateChallengesPage.xaml line 469
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element28 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element28).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 29: // Views\CreateChallengesPage.xaml line 449
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element29 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element29).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element29).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 30: // Views\CreateChallengesPage.xaml line 456
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element30 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element30).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 31: // Views\CreateChallengesPage.xaml line 463
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element31 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element31).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 32: // Views\CreateChallengesPage.xaml line 397
                {
                    this.QuizChallengeList = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 33: // Views\CreateChallengesPage.xaml line 425
                {
                    this.EmptyQuizChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 37: // Views\CreateChallengesPage.xaml line 391
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element37 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element37).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 38: // Views\CreateChallengesPage.xaml line 371
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element38 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element38).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element38).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 39: // Views\CreateChallengesPage.xaml line 378
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element39 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element39).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 40: // Views\CreateChallengesPage.xaml line 385
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element40 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element40).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 42: // Views\CreateChallengesPage.xaml line 347
                {
                    this.EmptyMusicChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 46: // Views\CreateChallengesPage.xaml line 312
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element46 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element46).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 47: // Views\CreateChallengesPage.xaml line 292
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element47 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element47).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element47).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 48: // Views\CreateChallengesPage.xaml line 299
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element48 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element48).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 49: // Views\CreateChallengesPage.xaml line 306
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element49 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element49).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 50: // Views\CreateChallengesPage.xaml line 240
                {
                    this.MultipleChoiceChallengeList = (global::Windows.UI.Xaml.Controls.ListView)(target);
                }
                break;
            case 51: // Views\CreateChallengesPage.xaml line 268
                {
                    this.EmptyMultipleChoiceChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 55: // Views\CreateChallengesPage.xaml line 234
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element55 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element55).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 56: // Views\CreateChallengesPage.xaml line 214
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element56 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element56).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element56).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 57: // Views\CreateChallengesPage.xaml line 221
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element57 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element57).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 58: // Views\CreateChallengesPage.xaml line 228
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element58 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element58).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 60: // Views\CreateChallengesPage.xaml line 190
                {
                    this.EmptyCrewChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 66: // Views\CreateChallengesPage.xaml line 141
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element66 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element66).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 67: // Views\CreateChallengesPage.xaml line 121
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element67 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element67).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element67).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 68: // Views\CreateChallengesPage.xaml line 128
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element68 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element68).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 69: // Views\CreateChallengesPage.xaml line 135
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element69 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element69).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 71: // Views\CreateChallengesPage.xaml line 97
                {
                    this.EmptyAudienceChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 76: // Views\CreateChallengesPage.xaml line 54
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element76 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element76).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 77: // Views\CreateChallengesPage.xaml line 34
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element77 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element77).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element77).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 78: // Views\CreateChallengesPage.xaml line 41
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element78 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element78).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 79: // Views\CreateChallengesPage.xaml line 48
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element79 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element79).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\CreateChallengesPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    CreateChallengesPage_obj1_Bindings bindings = new CreateChallengesPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 6: // Views\CreateChallengesPage.xaml line 643
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element6 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj6_Bindings bindings = new CreateChallengesPage_obj6_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element6.DataContext);
                    element6.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element6, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element6, bindings);
                }
                break;
            case 16: // Views\CreateChallengesPage.xaml line 564
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element16 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj16_Bindings bindings = new CreateChallengesPage_obj16_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element16.DataContext);
                    element16.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element16, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element16, bindings);
                }
                break;
            case 25: // Views\CreateChallengesPage.xaml line 485
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element25 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj25_Bindings bindings = new CreateChallengesPage_obj25_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element25.DataContext);
                    element25.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element25, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element25, bindings);
                }
                break;
            case 34: // Views\CreateChallengesPage.xaml line 406
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element34 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj34_Bindings bindings = new CreateChallengesPage_obj34_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element34.DataContext);
                    element34.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element34, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element34, bindings);
                }
                break;
            case 43: // Views\CreateChallengesPage.xaml line 328
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element43 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj43_Bindings bindings = new CreateChallengesPage_obj43_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element43.DataContext);
                    element43.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element43, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element43, bindings);
                }
                break;
            case 52: // Views\CreateChallengesPage.xaml line 249
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element52 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj52_Bindings bindings = new CreateChallengesPage_obj52_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element52.DataContext);
                    element52.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element52, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element52, bindings);
                }
                break;
            case 61: // Views\CreateChallengesPage.xaml line 157
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element61 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj61_Bindings bindings = new CreateChallengesPage_obj61_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element61.DataContext);
                    element61.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element61, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element61, bindings);
                }
                break;
            case 72: // Views\CreateChallengesPage.xaml line 70
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element72 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj72_Bindings bindings = new CreateChallengesPage_obj72_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element72.DataContext);
                    element72.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element72, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element72, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

