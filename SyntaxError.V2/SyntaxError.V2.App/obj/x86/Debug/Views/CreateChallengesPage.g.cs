#pragma checksum "C:\Users\upfor\Desktop\Skole\DotNET\SyntaxError_V2\SyntaxError.V2\SyntaxError.V2.App\Views\CreateChallengesPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "3AE00CC10FCD7A1B15D6C40451A220AC"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SyntaxError.V2.App.Views
{
    partial class CreateChallengesPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(global::Windows.UI.Xaml.Controls.ItemsControl obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Source = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj9_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.SologameChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj9;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj10;
            private global::Windows.UI.Xaml.Controls.TextBlock obj11;
            private global::Windows.UI.Xaml.Controls.TextBlock obj12;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj10SourceDisabled = false;
            private static bool isobj11TextDisabled = false;
            private static bool isobj12TextDisabled = false;

            public CreateChallengesPage_obj9_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 1008 && columnNumber == 59)
                {
                    isobj10SourceDisabled = true;
                }
                else if (lineNumber == 1014 && columnNumber == 49)
                {
                    isobj11TextDisabled = true;
                }
                else if (lineNumber == 1020 && columnNumber == 49)
                {
                    isobj12TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 9: // Views\CreateChallengesPage.xaml line 1001
                        this.obj9 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 10: // Views\CreateChallengesPage.xaml line 1006
                        this.obj10 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 11: // Views\CreateChallengesPage.xaml line 1010
                        this.obj11 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 12: // Views\CreateChallengesPage.xaml line 1016
                        this.obj12 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj9.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.SologameChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.SologameChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.SologameChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game(obj.Game, phase);
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                    }
                }
            }
            private void Update_Game(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game_URI(obj.URI, phase);
                        this.Update_Game_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Game_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1006
                    if (!isobj10SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj10, obj, null);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1010
                    if (!isobj11TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj11, obj, null);
                    }
                }
            }
            private void Update_Game_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 1016
                    if (!isobj12TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj12, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj22_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj22;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj23;
            private global::Windows.UI.Xaml.Controls.TextBlock obj24;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj23SourceDisabled = false;
            private static bool isobj24TextDisabled = false;

            public CreateChallengesPage_obj22_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 878 && columnNumber == 59)
                {
                    isobj23SourceDisabled = true;
                }
                else if (lineNumber == 883 && columnNumber == 45)
                {
                    isobj24TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 22: // Views\CreateChallengesPage.xaml line 871
                        this.obj22 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 23: // Views\CreateChallengesPage.xaml line 876
                        this.obj23 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 24: // Views\CreateChallengesPage.xaml line 879
                        this.obj24 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj22.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Image(obj.Image, phase);
                    }
                }
            }
            private void Update_Image(global::SyntaxError.V2.Modell.ChallengeObjects.Image obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Image_URI(obj.URI, phase);
                        this.Update_Image_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Image_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 876
                    if (!isobj23SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj23, obj, null);
                    }
                }
            }
            private void Update_Image_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 879
                    if (!isobj24TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj24, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj34_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj34;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj35;
            private global::Windows.UI.Xaml.Controls.TextBlock obj36;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj35SourceDisabled = false;
            private static bool isobj36TextDisabled = false;

            public CreateChallengesPage_obj34_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 748 && columnNumber == 59)
                {
                    isobj35SourceDisabled = true;
                }
                else if (lineNumber == 753 && columnNumber == 45)
                {
                    isobj36TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 34: // Views\CreateChallengesPage.xaml line 741
                        this.obj34 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 35: // Views\CreateChallengesPage.xaml line 746
                        this.obj35 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 36: // Views\CreateChallengesPage.xaml line 749
                        this.obj36 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj34.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Image(obj.Image, phase);
                    }
                }
            }
            private void Update_Image(global::SyntaxError.V2.Modell.ChallengeObjects.Image obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Image_URI(obj.URI, phase);
                        this.Update_Image_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Image_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 746
                    if (!isobj35SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj35, obj, null);
                    }
                }
            }
            private void Update_Image_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 749
                    if (!isobj36TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj36, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj46_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.QuizChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj46;
            private global::Windows.UI.Xaml.Controls.TextBlock obj47;
            private global::Windows.UI.Xaml.Controls.TextBlock obj48;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj47TextDisabled = false;
            private static bool isobj48TextDisabled = false;

            public CreateChallengesPage_obj46_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 617 && columnNumber == 57)
                {
                    isobj47TextDisabled = true;
                }
                else if (lineNumber == 621 && columnNumber == 57)
                {
                    isobj48TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 46: // Views\CreateChallengesPage.xaml line 611
                        this.obj46 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 47: // Views\CreateChallengesPage.xaml line 617
                        this.obj47 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 48: // Views\CreateChallengesPage.xaml line 621
                        this.obj48 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj46.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.QuizChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.QuizChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.QuizChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                        this.Update_Answers(obj.Answers, phase);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 617
                    if (!isobj47TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj47, obj, null);
                    }
                }
            }
            private void Update_Answers(global::SyntaxError.V2.Modell.ChallengeObjects.Answers obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Answers_Answer(obj.Answer, phase);
                    }
                }
            }
            private void Update_Answers_Answer(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 621
                    if (!isobj48TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj48, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj58_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.MusicChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj58;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj59;
            private global::Windows.UI.Xaml.Controls.TextBlock obj60;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj59SourceDisabled = false;
            private static bool isobj60TextDisabled = false;

            public CreateChallengesPage_obj58_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 489 && columnNumber == 59)
                {
                    isobj59SourceDisabled = true;
                }
                else if (lineNumber == 494 && columnNumber == 45)
                {
                    isobj60TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 58: // Views\CreateChallengesPage.xaml line 482
                        this.obj58 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 59: // Views\CreateChallengesPage.xaml line 487
                        this.obj59 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 60: // Views\CreateChallengesPage.xaml line 490
                        this.obj60 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj58.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.MusicChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.MusicChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.MusicChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Song(obj.Song, phase);
                    }
                }
            }
            private void Update_Song(global::SyntaxError.V2.Modell.ChallengeObjects.Music obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Song_URI(obj.URI, phase);
                        this.Update_Song_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Song_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 487
                    if (!isobj59SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj59, obj, null);
                    }
                }
            }
            private void Update_Song_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 490
                    if (!isobj60TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj60, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj70_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj70;
            private global::Windows.UI.Xaml.Controls.TextBlock obj71;
            private global::Windows.UI.Xaml.Controls.TextBlock obj72;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj71TextDisabled = false;
            private static bool isobj72TextDisabled = false;

            public CreateChallengesPage_obj70_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 358 && columnNumber == 57)
                {
                    isobj71TextDisabled = true;
                }
                else if (lineNumber == 362 && columnNumber == 57)
                {
                    isobj72TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 70: // Views\CreateChallengesPage.xaml line 352
                        this.obj70 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 71: // Views\CreateChallengesPage.xaml line 358
                        this.obj71 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 72: // Views\CreateChallengesPage.xaml line 362
                        this.obj72 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj70.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                        this.Update_Answers(obj.Answers, phase);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 358
                    if (!isobj71TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj71, obj, null);
                    }
                }
            }
            private void Update_Answers(global::SyntaxError.V2.Modell.ChallengeObjects.Answers obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Answers_Answer(obj.Answer, phase);
                    }
                }
            }
            private void Update_Answers_Answer(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 362
                    if (!isobj72TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj72, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj82_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.CrewChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj82;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj83;
            private global::Windows.UI.Xaml.Controls.TextBlock obj84;
            private global::Windows.UI.Xaml.Controls.TextBlock obj85;
            private global::Windows.UI.Xaml.Controls.TextBlock obj86;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj83SourceDisabled = false;
            private static bool isobj84TextDisabled = false;
            private static bool isobj85TextDisabled = false;
            private static bool isobj86TextDisabled = false;

            public CreateChallengesPage_obj82_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 216 && columnNumber == 59)
                {
                    isobj83SourceDisabled = true;
                }
                else if (lineNumber == 222 && columnNumber == 49)
                {
                    isobj84TextDisabled = true;
                }
                else if (lineNumber == 228 && columnNumber == 49)
                {
                    isobj85TextDisabled = true;
                }
                else if (lineNumber == 234 && columnNumber == 49)
                {
                    isobj86TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 82: // Views\CreateChallengesPage.xaml line 209
                        this.obj82 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 83: // Views\CreateChallengesPage.xaml line 214
                        this.obj83 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 84: // Views\CreateChallengesPage.xaml line 218
                        this.obj84 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 85: // Views\CreateChallengesPage.xaml line 224
                        this.obj85 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 86: // Views\CreateChallengesPage.xaml line 230
                        this.obj86 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj82.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.CrewChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.CrewChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.CrewChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game(obj.Game, phase);
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                        this.Update_CrewMember(obj.CrewMember, phase);
                    }
                }
            }
            private void Update_Game(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game_URI(obj.URI, phase);
                        this.Update_Game_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Game_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 214
                    if (!isobj83SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj83, obj, null);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 218
                    if (!isobj84TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj84, obj, null);
                    }
                }
            }
            private void Update_Game_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 224
                    if (!isobj85TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj85, obj, null);
                    }
                }
            }
            private void Update_CrewMember(global::SyntaxError.V2.Modell.ChallengeObjects.CrewMember obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_CrewMember_CrewTag(obj.CrewTag, phase);
                    }
                }
            }
            private void Update_CrewMember_CrewTag(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 230
                    if (!isobj86TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj86, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj96_Bindings :
            global::Windows.UI.Xaml.IDataTemplateExtension,
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.Modell.Challenges.AudienceChallenge dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);
            private bool removedDataContextHandler = false;

            // Fields for each control that has bindings.
            private global::System.WeakReference obj96;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx obj97;
            private global::Windows.UI.Xaml.Controls.TextBlock obj98;
            private global::Windows.UI.Xaml.Controls.TextBlock obj99;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj97SourceDisabled = false;
            private static bool isobj98TextDisabled = false;
            private static bool isobj99TextDisabled = false;

            public CreateChallengesPage_obj96_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 78 && columnNumber == 59)
                {
                    isobj97SourceDisabled = true;
                }
                else if (lineNumber == 84 && columnNumber == 49)
                {
                    isobj98TextDisabled = true;
                }
                else if (lineNumber == 90 && columnNumber == 49)
                {
                    isobj99TextDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 96: // Views\CreateChallengesPage.xaml line 71
                        this.obj96 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.Grid)target);
                        break;
                    case 97: // Views\CreateChallengesPage.xaml line 76
                        this.obj97 = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)target;
                        break;
                    case 98: // Views\CreateChallengesPage.xaml line 80
                        this.obj98 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 99: // Views\CreateChallengesPage.xaml line 86
                        this.obj99 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            public void DataContextChangedHandler(global::Windows.UI.Xaml.FrameworkElement sender, global::Windows.UI.Xaml.DataContextChangedEventArgs args)
            {
                 if (this.SetDataRoot(args.NewValue))
                 {
                    this.Update();
                 }
            }

            // IDataTemplateExtension

            public bool ProcessBinding(uint phase)
            {
                throw new global::System.NotImplementedException();
            }

            public int ProcessBindings(global::Windows.UI.Xaml.Controls.ContainerContentChangingEventArgs args)
            {
                int nextPhase = -1;
                ProcessBindings(args.Item, args.ItemIndex, (int)args.Phase, out nextPhase);
                return nextPhase;
            }

            public void ResetTemplate()
            {
                Recycle();
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
                switch(phase)
                {
                    case 0:
                        nextPhase = -1;
                        this.SetDataRoot(item);
                        if (!removedDataContextHandler)
                        {
                            removedDataContextHandler = true;
                            (this.obj96.Target as global::Windows.UI.Xaml.Controls.Grid).DataContextChanged -= this.DataContextChangedHandler;
                        }
                        this.initialized = true;
                        break;
                }
                this.Update_((global::SyntaxError.V2.Modell.Challenges.AudienceChallenge) item, 1 << phase);
            }

            public void Recycle()
            {
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.Modell.Challenges.AudienceChallenge)newDataRoot;
                    return true;
                }
                return false;
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.Modell.Challenges.AudienceChallenge obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game(obj.Game, phase);
                        this.Update_ChallengeTask(obj.ChallengeTask, phase);
                    }
                }
            }
            private void Update_Game(global::SyntaxError.V2.Modell.ChallengeObjects.Game obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_Game_URI(obj.URI, phase);
                        this.Update_Game_Name(obj.Name, phase);
                    }
                }
            }
            private void Update_Game_URI(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 76
                    if (!isobj97SourceDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_Toolkit_Uwp_UI_Controls_ImageExBase_Source(this.obj97, obj, null);
                    }
                }
            }
            private void Update_ChallengeTask(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 80
                    if (!isobj98TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj98, obj, null);
                    }
                }
            }
            private void Update_Game_Name(global::System.String obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 86
                    if (!isobj99TextDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj99, obj, null);
                    }
                }
            }
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class CreateChallengesPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IDataTemplateComponent,
            global::Windows.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICreateChallengesPage_Bindings
        {
            private global::SyntaxError.V2.App.Views.CreateChallengesPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj4;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj17;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj29;
            private global::Windows.UI.Xaml.Controls.ListView obj41;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj53;
            private global::Windows.UI.Xaml.Controls.ListView obj65;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj77;
            private global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView obj91;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj4ItemsSourceDisabled = false;
            private static bool isobj17ItemsSourceDisabled = false;
            private static bool isobj29ItemsSourceDisabled = false;
            private static bool isobj41ItemsSourceDisabled = false;
            private static bool isobj53ItemsSourceDisabled = false;
            private static bool isobj65ItemsSourceDisabled = false;
            private static bool isobj77ItemsSourceDisabled = false;
            private static bool isobj91ItemsSourceDisabled = false;

            public CreateChallengesPage_obj1_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 990 && columnNumber == 48)
                {
                    isobj4ItemsSourceDisabled = true;
                }
                else if (lineNumber == 860 && columnNumber == 48)
                {
                    isobj17ItemsSourceDisabled = true;
                }
                else if (lineNumber == 730 && columnNumber == 48)
                {
                    isobj29ItemsSourceDisabled = true;
                }
                else if (lineNumber == 603 && columnNumber == 31)
                {
                    isobj41ItemsSourceDisabled = true;
                }
                else if (lineNumber == 471 && columnNumber == 48)
                {
                    isobj53ItemsSourceDisabled = true;
                }
                else if (lineNumber == 344 && columnNumber == 31)
                {
                    isobj65ItemsSourceDisabled = true;
                }
                else if (lineNumber == 198 && columnNumber == 48)
                {
                    isobj77ItemsSourceDisabled = true;
                }
                else if (lineNumber == 60 && columnNumber == 48)
                {
                    isobj91ItemsSourceDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 4: // Views\CreateChallengesPage.xaml line 990
                        this.obj4 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 17: // Views\CreateChallengesPage.xaml line 860
                        this.obj17 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 29: // Views\CreateChallengesPage.xaml line 730
                        this.obj29 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 41: // Views\CreateChallengesPage.xaml line 601
                        this.obj41 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 53: // Views\CreateChallengesPage.xaml line 471
                        this.obj53 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 65: // Views\CreateChallengesPage.xaml line 342
                        this.obj65 = (global::Windows.UI.Xaml.Controls.ListView)target;
                        break;
                    case 77: // Views\CreateChallengesPage.xaml line 198
                        this.obj77 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    case 91: // Views\CreateChallengesPage.xaml line 60
                        this.obj91 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)target;
                        break;
                    default:
                        break;
                }
            }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                throw new global::System.NotImplementedException();
            }

            public void Recycle()
            {
                throw new global::System.NotImplementedException();
            }

            // ICreateChallengesPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = (global::SyntaxError.V2.App.Views.CreateChallengesPage)newDataRoot;
                    return true;
                }
                return false;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::SyntaxError.V2.App.Views.CreateChallengesPage obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel(obj.ViewModel, phase);
                    }
                }
            }
            private void Update_ViewModel(global::SyntaxError.V2.App.ViewModels.CreateChallengesViewModel obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_ViewModel_SologameChallenges(obj.SologameChallenges, phase);
                        this.Update_ViewModel_SilhouetteChallenges(obj.SilhouetteChallenges, phase);
                        this.Update_ViewModel_ScreenshotChallenges(obj.ScreenshotChallenges, phase);
                        this.Update_ViewModel_QuizChallenges(obj.QuizChallenges, phase);
                        this.Update_ViewModel_MusicChallenges(obj.MusicChallenges, phase);
                        this.Update_ViewModel_MultipleChoiceChallenges(obj.MultipleChoiceChallenges, phase);
                        this.Update_ViewModel_CrewChallenges(obj.CrewChallenges, phase);
                        this.Update_ViewModel_AudienceChallenges(obj.AudienceChallenges, phase);
                    }
                }
            }
            private void Update_ViewModel_SologameChallenges(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.SologameChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 990
                    if (!isobj4ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj4, obj, null);
                    }
                }
            }
            private void Update_ViewModel_SilhouetteChallenges(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.SilhouetteChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 860
                    if (!isobj17ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj17, obj, null);
                    }
                }
            }
            private void Update_ViewModel_ScreenshotChallenges(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.ScreenshotChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 730
                    if (!isobj29ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj29, obj, null);
                    }
                }
            }
            private void Update_ViewModel_QuizChallenges(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.QuizChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 601
                    if (!isobj41ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj41, obj, null);
                    }
                }
            }
            private void Update_ViewModel_MusicChallenges(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.MusicChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 471
                    if (!isobj53ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj53, obj, null);
                    }
                }
            }
            private void Update_ViewModel_MultipleChoiceChallenges(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.MultipleChoiceChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 342
                    if (!isobj65ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj65, obj, null);
                    }
                }
            }
            private void Update_ViewModel_CrewChallenges(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.CrewChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 198
                    if (!isobj77ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj77, obj, null);
                    }
                }
            }
            private void Update_ViewModel_AudienceChallenges(global::System.Collections.ObjectModel.ObservableCollection<global::SyntaxError.V2.Modell.Challenges.AudienceChallenge> obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // Views\CreateChallengesPage.xaml line 60
                    if (!isobj91ItemsSourceDisabled)
                    {
                        XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ItemsControl_ItemsSource(this.obj91, obj, null);
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // Views\CreateChallengesPage.xaml line 13
                {
                    this.ContentArea = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 3: // Views\CreateChallengesPage.xaml line 16
                {
                    this.ChallengeList = (global::Windows.UI.Xaml.Controls.Pivot)(target);
                }
                break;
            case 4: // Views\CreateChallengesPage.xaml line 990
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element4 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element4).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 5: // Views\CreateChallengesPage.xaml line 1078
                {
                    this.EmptySologameChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 6: // Views\CreateChallengesPage.xaml line 1068
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element6 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element6).Click += this.SaveButton_Click;
                }
                break;
            case 7: // Views\CreateChallengesPage.xaml line 1071
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element7 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element7).Click += this.BackButton_Click;
                }
                break;
            case 8: // Views\CreateChallengesPage.xaml line 1049
                {
                    global::Windows.UI.Xaml.Controls.Button element8 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element8).Click += this.BackButton_Click;
                }
                break;
            case 13: // Views\CreateChallengesPage.xaml line 984
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element13 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element13).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 14: // Views\CreateChallengesPage.xaml line 964
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element14 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element14).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element14).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 15: // Views\CreateChallengesPage.xaml line 971
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element15 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element15).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 16: // Views\CreateChallengesPage.xaml line 978
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element16 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element16).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 17: // Views\CreateChallengesPage.xaml line 860
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element17 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element17).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 18: // Views\CreateChallengesPage.xaml line 940
                {
                    this.EmptySilhouetteChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 19: // Views\CreateChallengesPage.xaml line 930
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element19 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element19).Click += this.SaveButton_Click;
                }
                break;
            case 20: // Views\CreateChallengesPage.xaml line 933
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element20 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element20).Click += this.BackButton_Click;
                }
                break;
            case 21: // Views\CreateChallengesPage.xaml line 911
                {
                    global::Windows.UI.Xaml.Controls.Button element21 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element21).Click += this.BackButton_Click;
                }
                break;
            case 25: // Views\CreateChallengesPage.xaml line 854
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element25 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element25).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 26: // Views\CreateChallengesPage.xaml line 834
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element26 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element26).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element26).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 27: // Views\CreateChallengesPage.xaml line 841
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element27 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element27).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 28: // Views\CreateChallengesPage.xaml line 848
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element28 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element28).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 29: // Views\CreateChallengesPage.xaml line 730
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element29 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element29).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 30: // Views\CreateChallengesPage.xaml line 810
                {
                    this.EmptyScreenshotChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 31: // Views\CreateChallengesPage.xaml line 800
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element31 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element31).Click += this.SaveButton_Click;
                }
                break;
            case 32: // Views\CreateChallengesPage.xaml line 803
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element32 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element32).Click += this.BackButton_Click;
                }
                break;
            case 33: // Views\CreateChallengesPage.xaml line 781
                {
                    global::Windows.UI.Xaml.Controls.Button element33 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element33).Click += this.BackButton_Click;
                }
                break;
            case 37: // Views\CreateChallengesPage.xaml line 724
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element37 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element37).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 38: // Views\CreateChallengesPage.xaml line 704
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element38 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element38).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element38).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 39: // Views\CreateChallengesPage.xaml line 711
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element39 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element39).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 40: // Views\CreateChallengesPage.xaml line 718
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element40 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element40).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 41: // Views\CreateChallengesPage.xaml line 601
                {
                    this.QuizChallengeList = (global::Windows.UI.Xaml.Controls.ListView)(target);
                    ((global::Windows.UI.Xaml.Controls.ListView)this.QuizChallengeList).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 42: // Views\CreateChallengesPage.xaml line 680
                {
                    this.EmptyQuizChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 43: // Views\CreateChallengesPage.xaml line 670
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element43 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element43).Click += this.SaveButton_Click;
                }
                break;
            case 44: // Views\CreateChallengesPage.xaml line 673
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element44 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element44).Click += this.BackButton_Click;
                }
                break;
            case 45: // Views\CreateChallengesPage.xaml line 651
                {
                    global::Windows.UI.Xaml.Controls.Button element45 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element45).Click += this.BackButton_Click;
                }
                break;
            case 49: // Views\CreateChallengesPage.xaml line 595
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element49 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element49).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 50: // Views\CreateChallengesPage.xaml line 575
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element50 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element50).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element50).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 51: // Views\CreateChallengesPage.xaml line 582
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element51 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element51).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 52: // Views\CreateChallengesPage.xaml line 589
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element52 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element52).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 53: // Views\CreateChallengesPage.xaml line 471
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element53 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element53).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 54: // Views\CreateChallengesPage.xaml line 551
                {
                    this.EmptyMusicChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 55: // Views\CreateChallengesPage.xaml line 541
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element55 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element55).Click += this.SaveButton_Click;
                }
                break;
            case 56: // Views\CreateChallengesPage.xaml line 544
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element56 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element56).Click += this.BackButton_Click;
                }
                break;
            case 57: // Views\CreateChallengesPage.xaml line 522
                {
                    global::Windows.UI.Xaml.Controls.Button element57 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element57).Click += this.BackButton_Click;
                }
                break;
            case 61: // Views\CreateChallengesPage.xaml line 465
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element61 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element61).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 62: // Views\CreateChallengesPage.xaml line 445
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element62 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element62).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element62).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 63: // Views\CreateChallengesPage.xaml line 452
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element63 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element63).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 64: // Views\CreateChallengesPage.xaml line 459
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element64 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element64).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 65: // Views\CreateChallengesPage.xaml line 342
                {
                    this.MultipleChoiceChallengeList = (global::Windows.UI.Xaml.Controls.ListView)(target);
                    ((global::Windows.UI.Xaml.Controls.ListView)this.MultipleChoiceChallengeList).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 66: // Views\CreateChallengesPage.xaml line 421
                {
                    this.EmptyMultipleChoiceChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 67: // Views\CreateChallengesPage.xaml line 411
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element67 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element67).Click += this.SaveButton_Click;
                }
                break;
            case 68: // Views\CreateChallengesPage.xaml line 414
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element68 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element68).Click += this.BackButton_Click;
                }
                break;
            case 69: // Views\CreateChallengesPage.xaml line 392
                {
                    global::Windows.UI.Xaml.Controls.Button element69 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element69).Click += this.BackButton_Click;
                }
                break;
            case 73: // Views\CreateChallengesPage.xaml line 336
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element73 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element73).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 74: // Views\CreateChallengesPage.xaml line 316
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element74 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element74).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element74).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 75: // Views\CreateChallengesPage.xaml line 323
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element75 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element75).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 76: // Views\CreateChallengesPage.xaml line 330
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element76 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element76).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 77: // Views\CreateChallengesPage.xaml line 198
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element77 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element77).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 78: // Views\CreateChallengesPage.xaml line 292
                {
                    this.EmptyCrewChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 79: // Views\CreateChallengesPage.xaml line 282
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element79 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element79).Click += this.SaveButton_Click;
                }
                break;
            case 80: // Views\CreateChallengesPage.xaml line 285
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element80 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element80).Click += this.BackButton_Click;
                }
                break;
            case 81: // Views\CreateChallengesPage.xaml line 263
                {
                    global::Windows.UI.Xaml.Controls.Button element81 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element81).Click += this.BackButton_Click;
                }
                break;
            case 87: // Views\CreateChallengesPage.xaml line 192
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element87 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element87).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 88: // Views\CreateChallengesPage.xaml line 172
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element88 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element88).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element88).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 89: // Views\CreateChallengesPage.xaml line 179
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element89 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element89).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 90: // Views\CreateChallengesPage.xaml line 186
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element90 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element90).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            case 91: // Views\CreateChallengesPage.xaml line 60
                {
                    global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView element91 = (global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)(target);
                    ((global::Microsoft.Toolkit.Uwp.UI.Controls.AdaptiveGridView)element91).Tapped += this.ChallengeList_Tapped;
                }
                break;
            case 92: // Views\CreateChallengesPage.xaml line 148
                {
                    this.EmptyAudienceChallenges = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 93: // Views\CreateChallengesPage.xaml line 138
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element93 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element93).Click += this.SaveButton_Click;
                }
                break;
            case 94: // Views\CreateChallengesPage.xaml line 141
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element94 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element94).Click += this.BackButton_Click;
                }
                break;
            case 95: // Views\CreateChallengesPage.xaml line 119
                {
                    global::Windows.UI.Xaml.Controls.Button element95 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    ((global::Windows.UI.Xaml.Controls.Button)element95).Click += this.BackButton_Click;
                }
                break;
            case 100: // Views\CreateChallengesPage.xaml line 54
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element100 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element100).Click += this.AddNewChallengeButton_Click;
                }
                break;
            case 101: // Views\CreateChallengesPage.xaml line 34
                {
                    global::Windows.UI.Xaml.Controls.AutoSuggestBox element101 = (global::Windows.UI.Xaml.Controls.AutoSuggestBox)(target);
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element101).TextChanged += this.AutoSuggestBox_TextChanged;
                    ((global::Windows.UI.Xaml.Controls.AutoSuggestBox)element101).QuerySubmitted += this.AutoSuggestBox_QuerySubmitted;
                }
                break;
            case 102: // Views\CreateChallengesPage.xaml line 41
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element102 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element102).Click += this.AppBarButton_SelectionMode_Click;
                }
                break;
            case 103: // Views\CreateChallengesPage.xaml line 48
                {
                    global::Windows.UI.Xaml.Controls.AppBarButton element103 = (global::Windows.UI.Xaml.Controls.AppBarButton)(target);
                    ((global::Windows.UI.Xaml.Controls.AppBarButton)element103).Click += this.AppBarButton_DeleteSelected_Click;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // Views\CreateChallengesPage.xaml line 1
                {                    
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    CreateChallengesPage_obj1_Bindings bindings = new CreateChallengesPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element1, bindings);
                }
                break;
            case 9: // Views\CreateChallengesPage.xaml line 1001
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element9 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj9_Bindings bindings = new CreateChallengesPage_obj9_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element9.DataContext);
                    element9.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element9, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element9, bindings);
                }
                break;
            case 22: // Views\CreateChallengesPage.xaml line 871
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element22 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj22_Bindings bindings = new CreateChallengesPage_obj22_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element22.DataContext);
                    element22.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element22, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element22, bindings);
                }
                break;
            case 34: // Views\CreateChallengesPage.xaml line 741
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element34 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj34_Bindings bindings = new CreateChallengesPage_obj34_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element34.DataContext);
                    element34.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element34, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element34, bindings);
                }
                break;
            case 46: // Views\CreateChallengesPage.xaml line 611
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element46 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj46_Bindings bindings = new CreateChallengesPage_obj46_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element46.DataContext);
                    element46.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element46, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element46, bindings);
                }
                break;
            case 58: // Views\CreateChallengesPage.xaml line 482
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element58 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj58_Bindings bindings = new CreateChallengesPage_obj58_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element58.DataContext);
                    element58.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element58, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element58, bindings);
                }
                break;
            case 70: // Views\CreateChallengesPage.xaml line 352
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element70 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj70_Bindings bindings = new CreateChallengesPage_obj70_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element70.DataContext);
                    element70.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element70, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element70, bindings);
                }
                break;
            case 82: // Views\CreateChallengesPage.xaml line 209
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element82 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj82_Bindings bindings = new CreateChallengesPage_obj82_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element82.DataContext);
                    element82.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element82, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element82, bindings);
                }
                break;
            case 96: // Views\CreateChallengesPage.xaml line 71
                {                    
                    global::Windows.UI.Xaml.Controls.Grid element96 = (global::Windows.UI.Xaml.Controls.Grid)target;
                    CreateChallengesPage_obj96_Bindings bindings = new CreateChallengesPage_obj96_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(element96.DataContext);
                    element96.DataContextChanged += bindings.DataContextChangedHandler;
                    global::Windows.UI.Xaml.DataTemplate.SetExtensionInstance(element96, bindings);
                    global::Windows.UI.Xaml.Markup.XamlBindingHelper.SetDataTemplateComponent(element96, bindings);
                }
                break;
            }
            return returnValue;
        }
    }
}

